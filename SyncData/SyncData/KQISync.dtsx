<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/19/2017 9:10:46 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="PC201411071828"
  DTS:CreatorName="PC201411071828\Administrator"
  DTS:DTSID="{309DF83A-5FBF-449E-A910-89FADFD004CD}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5583.0"
  DTS:LocaleID="2052"
  DTS:ObjectName="KQISync"
  DTS:PackageType="5"
  DTS:VersionBuild="72"
  DTS:VersionGUID="{5FBE3AAA-4FD9-480B-9790-9549CFC207A2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[平面文件连接管理器]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{28A36468-5B5C-44FC-A49B-57C231DC5704}"
      DTS:ObjectName="平面文件连接管理器">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::KQIloadFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2052"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ꇐ얺퀬잡쏸돻Ⳇ偙协堬佐ⱓ붷잽쨬벱ⳤ�탊혬닊샮탠ⳍ돒꪿뇊폑쨬웓쾵퓂쯘싙Ⳋ돒ꛓ뇊폑댬뺡Ⲱꢶ혬닊믮떰뒥쫎⳽쎷쫎뻕딬좼컫별샾탠ⳍ벵뇊㐊〶ㄱ〱㙅㌸ⰶ뷉ꎺ�쿀贈럍ꏍ떳ꆳ놱ⵈⰳ㤳㤮〷㐷ㄬ㤱㜮㠸㐵㈬〸㈬㄰⼷㘰㈯‴㜱㌺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬㘵⸷㈰㔹㘬㌴㜮㐵ⰶ㤴⸸㐸ⰵ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㌳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䄱䈱ㄳ올즽놽쪡펤퓎䢰ㅟ㌬⸸㔲ㄱ㜶ㄬ㐱㈮㜱ㄵⰴ㈱ⰰ〲㜱〯⼶㔲ㄠ㨲〳〺ⰰ꿊튼꿗쨬웓쾵퓂쯘싙뗊ⳍ㌱㘰㈮㘲ⰸ⸰ⰰ㤱⸱㜱㜷ⰶ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㌲測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䄱䈱ㄳ올즽놽쪡펤퓎䢰ㅟ㌬⸸㔲ㄱ㜶ㄬ㐱㈮㜱ㄵⰴ㈱ⰰ〲㜱〯⼶㐲㈠㨲〰〺ⰰ꿊튼꿗쨬웓쾵퓂쯘싙뗊ⳍ㐱ㄳ㌮㄰ⰳ㤱㘱㤮㐹ⰴ〲⸹㜵㐸ⰹ믍ꊷꊲ틇횳∬��낼ꮴ귔‬ﺷ偓Ⱒ㌲測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䄱䈱ㄳ올즽놽쪡펤퓎䢰ㅟ㌬⸸㔲ㄱ㜶ㄬ㐱㈮㜱ㄵⰴ㈱ⰰ〲㜱〯⼶㐲㈠㨲㔱〺ⰰ꿊튼꿗츬훞닊ⳮ㠱㤸㐮㌵ⰶ㐲㠸ㄮ㠸㈬㜰㜮㐹㠸촬랻늢늻뗮뎫탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㈬ⰳ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱㄱㅁ㍂ⰱ뷆뷉ꆱ꓊컓냔彈ⰱ㠳㈮ㄵ㘱ⰷㄱ⸴ㄲ㔷㐱ㄬ〲㈬㄰⼷㘰㈯‴㈲ㄺ㨵〰쨬벯ퟒⲯ�쫖ㄬ㠸⸹㔴㘳㈬㠴⸸㠱ⰸ〲⸷㤷㠴ⰸ믍ꊷ뮲ꮵ횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㌲測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䄱䈱ㄳ올즽놽쪡펤퓎䢰ㅟ㌬⸸㔲ㄱ㜶ㄬ㐱㈮㜱ㄵⰴ㈱ⰰ〲㜱〯⼶㐲㈠㨲〰〺ⰰ꿊튼꿗쨬웓쾵퓂쯘싙뗊ⳍ㐱ㄳ㌮㄰ⰳ㤱㘱㤮㐹ⰴ〲⸹㜵㐸ⰹ믍ꊷꊲ틇횳∬��낼ꮴ귔‬ﺷ偓Ⱒ㌲測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌷䈷㠳묬쇨ퟫ䢯㈭㌬⸸㐳㈹ㄬ㜱㈮㜳㤱ㄬ〲㈬㄰⼷㘰㈯″㤰㐺㨵〰눬훗ⳝ폊뗆싏��쫂춵㜬㈴㌮ㄹⰳ⸰ⰰ㘱⸱㔷㈲ⰹ믍ꊷꮵ횳뮲∬헖쮶귔‬펽�쿉﯋귔Ⱒⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱ㅅ㌰ⰵ뷉ꎺ�쿃ꪽ샎韛뫔ⵈⰲ〴〮㌱ⰴㄱ⸹㘷㘵ⰸ㈱ⰰ〲㜱〯⼶㐲ㄠ㨸㔱〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㜱㈹㐮㔸ⰶ㜱㜷㠮ㄶ㔬㜵㌮〸ⰷ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㔳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰〱㔳줬몽릣쟘쏸뷏햪컲지퓺䢺㈭㐬⸰㄰㐳ㄬ㤱㜮㔶㠶ㄬ〲㈬㄰⼷㘰㈯‴〲㌺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵㌬㌵⸴㐲㈲㠬ㄹ㌮㘸ⰱ㜴⸵㔴㜹ⰸ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㔳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰㍃㤳줬몽릣쟘뇸벫ퟒ䢯㌭㐬⸰㄰㠹ㄬ㤱㜮㈷ⰱ㐲ⰰ〲㜱〯⼶㐲ㄠ㨷㔴〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍㄳ㌲㐮㔵ㄬㄵ⸹㔶㠸㌬ㄳ㘮㜲㐸촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰴ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㌱㑆㌵ⰱ뷉ꎺ��믒�ꏍ떳ꆳⵈⰱ〴〮㤰㐴ㄬ㤱㜮〶㐳ㄬⰰ〲㜱〯⼶㐲ㄠ㨷㔴〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㤴⸱㌸㠹ㄬ㔸⸷〱ㄳ㈬㜱㤮〰㔲촬랻늢뗮뎫탖닸늻ⳮ펽�쿉﯋귔ㄬ測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰〱㔳줬몽릣쟘쏸뷏햪컲지퓺䢺㈭㐬⸰㄰㐳ㄬ㤱㜮㔶㠶ㄬ〲㈬㄰⼷㘰㈯‴㤱㌺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬㠳⸵㠵㘰㜬㤸㌮㜰ⰱ㌳⸳㈹㘸ⰵ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㔳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰あ㌳줬몽릣쟘쇸쪸뺳䣖㌭㐬⸰㄰㐳ㄬ㤱㜮㘷ⰲ㐲ⰰ〲㜱〯⼶㐲ㄠ㨴㔱〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㘳㘳㠮㐸ⰸ㜸⸰㈴㄰ⰷ㐹⸴㤶〱ⰴ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒㄲ測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰あ㌳줬몽릣쟘쇸쪸뺳䣖㌭㐬⸰㄰㐳ㄬ㤱㜮㘷ⰲ㐲ⰰ〲㜱〯⼶〲ㄠ㨸㔴〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㤱㘳㔮㘸ⰵ㘱㈱㔮㔹ⰸ㠲⸲㠳㤶촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㈬ⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䉅㌰ⰳ뷉ꎺ�룁돊횾ⵈⰳ〴〮㌱ⰴㄱ⸹㜷㈶㈬〴㈬㄰⼷㘰㈯‴㔱㐺㨵〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬㜷⸰㐳㘹㤬㔷㌮㘵ⰳ㈵⸷㜷㌷ⰴ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒㄲ測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰あ㌳줬몽릣쟘쇸쪸뺳䣖㌭㐬⸰㄰㐳ㄬ㤱㜮㘷ⰲ㐲ⰰ〲㜱〯⼶㐲ㄠ㨴〳〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㘲㈱㔮㌳ⰴㄲ㐸㔮㘲ⰶ㠲⸱㈷㤸ⰴ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒㄲ測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰あ㌳줬몽릣쟘쇸쪸뺳䣖㌭㐬⸰㄰㐳ㄬ㤱㜮㘷ⰲ㐲ⰰ〲㜱〯⼶㐲ㄠ㨶〰〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍㄲ㤶㤮㤵㤬㜱〮〸ⰱㄴ⸵㘹㤴촬랻늢닮잢돒탖닸ⳮ츢쿞볟뒰쪫퓤튭Ⳳ뜠컾叱≐㈬ⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䉅㌰ⰳ뷉ꎺ�룁돊횾ⵈⰳ〴〮㌱ⰴㄱ⸹㜷㈶㈬〴㈬㄰⼷㘰㈯‴ㄲ〺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵ㄬ㠴⸳㜷㠷ㄬ㘷⸹㌰㜱㈬㠴㌮ㄲ㌹촬랻늢닮잢돒탖닸ⳮ츢쿞볟뒰쪫퓤튭Ⳳ뜠컾叱≐㈬ⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䉅㌰ⰳ뷉ꎺ�룁돊횾ⵈⰳ〴〮㌱ⰴㄱ⸹㜷㈶㈬〴㈬㄰⼷㘰㈯′ㄲ〺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬㐶⸲㘰㠹ㄬㄶ⸹〹ⰴㄴ⸳〹㜱촬랻늢닮잢돒탖닸ⳮ츢쿞볟뒰쪫퓤튭Ⳳ뜠컾叱≐㈬ⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㜱㘵㍅ⰶ컑뷉ꇐ꿗ⵈⰳ㜳㠮㤵㜳ⰵㄱ⸷㤱㤸㔷㈬〴㈬㄰⼷㘰㈯‴㌲ㄺ㨵〰눬훗ⳝ�쫖㌬㌱⸸㠶㌶ㄬ㜰㤴㠮㈸㜬㐵㜮㘶ⰶ믍ꊷ뮲ꮵ횳∬헖쮶귔‬펽�쿉﯋귔Ⱒⰲ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㐱㘸㌰ⰰ탊ꯋ싋ⵈⰰㄴ〮㔴㐲ㄬ㜱㤮㌸㤹㌬ⰰ〲㜱〯⼶㐲ㄠ㨶㔴〺ⰰ킳습츬훞닊ⳮ㔱㔱㜮㔷ⰹ㌱㄰⸱㐳ⰴ㔱⸵㤸㈰ⰱ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙ㐱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䙃ㄳ혬룐쟛돸뎤럇떹䣪ㄭ㌬⸹㔹㐲㜷ㄬ㤱㔮〹㘹ⰵⰰ〲㜱〯⼶㐲㈠㨰㔴〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㔱〵㈮㐲ⰹ㔹⸰㌶㐵ㄬㄸ㠮㈷㌶촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰵ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱㙅㌸ⰶ뷉ꎺ�쿀贈럍ꏍ떳ꆳ놱ⵈⰳ㤳㤮〷㐷ㄬ㤱㜮㠸㐵㈬〸㈬㄰⼷㘰㈯‴㐱㌺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵ㄬ㐴⸷㜷㘱ㄬㄳ⸶㜶㜰㐬㤱㜮㤰㜸촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㌬ⰳ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱ㅅ㌰ⰵ뷉ꎺ�쿃ꪽ샎韛뫔ⵈⰲ〴〮㌱ⰴㄱ⸹㘷㘵ⰸ㈱ⰰ〲㜱〯⼶㔲ㄠ㨳〰〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㠲㈲〮㈴ⰷ㌱〳㘮㤰ⰶ〴⸲㈰㘵ⰷ믍ꊷꊲ틇횳∬��낼ꮴ귔‬ﺷ偓Ⱒ㔳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰〱㔳줬몽릣쟘쏸뷏햪컲지퓺䢺㈭㐬⸰㄰㐳ㄬ㤱㜮㔶㠶ㄬ〲㈬㄰⼷㘰㈯‵㌱〺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬㈸⸲㐰㜲ㄬ㌳⸰〶㘹㐬㈰〮㔲㜶촬랻늢닮잢돒탖닸ⳮ츢쿞볟뒰쪫퓤튭Ⳳ뜠컾叱≐㌬ⰵ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䍅㍅ⰷ뷉ꎺ�ⵈⰱ㤳㤮㔶ⰱㄱ⸹㠷㜳〬㈬㄰⼷㘰㈯‴㤱㌺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵ㄬ㐸⸴㄰㔵ㄬ㘵⸸㠵㘳㌬㤰㐮〶ⰱ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰㠶㘳줬몽릣쟘샸쇏췺춷뎣뎵놡䢱㌭㌬⸹㜹㜰ⰴㄱ⸹㠷㔸ⰴ㠲ⰰ〲㜱〯⼶㐲ㄠ㨱㔴〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㘲〳㠮㠶ⰴㄱ㔸㜮㐹ⰸㄷ⸵㔱㘹ⰷ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㌳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰㍃㤳줬몽릣쟘뇸벫ퟒ䢯㌭㐬⸰㄰㠹ㄬ㤱㜮㈷ⰱ㐲ⰰ〲㜱〯⼶ㄲ㈠㨰〳〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㠱㐷㌮㤰ⰱㄹ⸷ㄱ㜰㈬㐵㘮㔶㈸촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰴ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䍅㌳ⰹ뷉ꎺ�ꮱ튼꿗ⵈⰳ〴〮㤱ⰸㄱ⸹㜷ㄲ㈬〴㈬㄰⼷㘰㈯‱ㄲ〺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵ㄬ㘹⸵㜸㐰ㄬ㠸⸱㠳㐲㈬〷〮㐲ⰳ믍ꊷꮵ횳뮲∬��낼ꮴ귔‬ﺷ偓Ⱒ㐱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰〱㔳줬몽릣쟘쏸뷏햪컲지퓺䢺㈭㐬⸰㄰㐳ㄬ㤱㜮㔶㠶ㄬ〲㈬㄰⼷㘰㈯‱〲㐺㨵〰윬믘뗊Ⲻ�쫖㠬㤹ㄮ㔲㔸㌬㔰⸸㐲㔹ㄬ㈸㤮㈸㈳촬랻늢늻뗮뎫탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㌬ⰵ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䍅㌳ⰹ뷉ꎺ�ꮱ튼꿗ⵈⰳ〴〮㤱ⰸㄱ⸹㜷ㄲ㈬〴㈬㄰⼷㘰㈯‴㌱ㄺ㨵〰윬믘뗊Ⲻ�쫖㈬㘰⸴ㄳ㔰㌬㘱⸴〱㠲㈬㠶㈮〸ⰴ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙ㐱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䄳㉄ㄳ혬룐쟛뇸뒱폳쒪䣏ㄭ㌬⸹㔹〴ⰳㄱ⸹㤵ㄶⰴⰰ〲㜱〯⼶㐲㈠㨱〳〺ⰰ�쪻몵츬훞닊ⳮ㈲㌸㜮㐷ⰲㄳ㔲〮㠶ⰴ㠲⸵㜷㜸ⰵ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙㄴ測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㠴〶ㄳ쨬쯐랫쯥䣂ㄭ㐬⸱㐰㈵ⰴㄱ⸷㠹㤳ⰹ㐱ⰰ〲㜱〯⼶㔲ㄠ㨰〰〺ⰰ킳습츬훞닊ⳮ㠱㔱㜮㔹ⰹ㠴㐲㤮〵ⰷㄳ⸰㘳㔹ⰴ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙ㌳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㠴〶ㄳ쨬쯐랫쯥䣂ㄭ㐬⸱㐰㈵ⰴㄱ⸷㠹㤳ⰹ㐱ⰰ〲㜱〯⼶㔲〠㨸㔴〺ⰰ킳습쨬웓쾵퓂쯘싙뗊ⳍ㤱㐲㔮㤰ⰳ㔱ㄱ㠮ㄸⰵ㈳⸹㔰ㄶ촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㌬ⰳ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䍅㍅ⰷ뷉ꎺ�ⵈⰱ㤳㤮㔶ⰱㄱ⸹㠷㜳〬㈬㄰⼷㘰㈯‴㜱ㄺ㨵〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬㐰⸰㈹㈹ㄬ㈴⸰㔴㔹㔬㜸〮㐱㌸촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㘬ⰰ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱㄱ㈴㌰ⰰ탊�꣍춼쏌䅃㠱〰ⵈⰰ㠳〮㈲ⰲㄱ⸴㤵ⰲ〴㈬㄰⼷㘰㈯‵㔱㐺㨵〰쨬벯ퟒⲯ폊뗆싏��쫂춵ㄬㄶ⸱〲ⰹ㜱〳㐮㤳ⰶ㈲⸶㘲㌹ⰳ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒⰶ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱㙅㌸ⰶ뷉ꎺ�쿀贈럍ꏍ떳ꆳ놱ⵈⰳ㤳㤮〷㐷ㄬ㤱㜮㠸㐵㈬〸㈬㄰⼷㘰㈯‴㤱㌺㨰〰윬믘뗊Ⲻ폊뗆싏��쫂춵ㄬ〷⸹㘹ⰸ㌱㔷ㄮㄹⰹ㜳⸱㠷㠳ⰴ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㌳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲ㄠ㨰〰〺ⰰ�쪻몵츬훞닊ⳮ㤱㐰㈮㠲ⰴ㈲㘱㈮㘹ⰴ㔲⸲㈸〲ⰷ믍ꊷ뮲ꮵ횳∬��낼ꮴ귔‬ﺷ偓Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰〱㔳줬몽릣쟘쏸뷏햪컲지퓺䢺㈭㐬⸰㄰㐳ㄬ㤱㜮㔶㠶ㄬ〲㈬㄰⼷㘰㈯‴㠱㐺㨵〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬ㄷ⸵㔵ⰹ㌱ㄱ㐮㔷ⰲ㘴⸹㘶㤰ⰸ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㔳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䄷㘳㌳쨬쳐뛺듾䢦㌭㌬⸷㔷㐱ㄬ㔱㘮㘷㈬〶㈬㄰⼷㘰㈯‴㠱〺㨰〰먬쯢Ⲯ�쫖㈬㘰⸴㌳㈶㐬㤸⸸㈹㌳ㄬ㈲㘮㈸㐲촬랻몢돍탖뻸당늻ⳮ﯋퀨뢡싅쫊볂뗾⧈ㄬⰰ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㜱㍁㌶ⰳ탊頻ﺶꚴⵈⰳ㜳㜮ㄵⰴㄱ⸵㜶ⰶ㘲ⰰ〲㜱〯⼶㐲ㄠ㨸㔴〺ⰰ껋쨬웓쾵퓂쯘싙뗊ⳍ〱㈴㤮㐵ⰸ㈵⸹㔷㜷ㄬ〴㠮㈶㐲촬랻늢뗮뎫탖닸늻ⳮ펽�쿉﯋귔ㄬⰰ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱〰㍂ⰲ탊꒳잳ꮹꋔⵈⰱ㠳㠮ㄸⰹㄱ⸵㜴ⰵ〱ⰰ〲㜱〯⼶㐲㈠㨲㔱〺ⰰꎱꢶ쨬웓쾵퓂쯘싙뗊ⳍ㐱㔷〮㠹ⰳ㔲⸲㐱㤴ⰶ㤱⸱㜸㜸ⰲ믍ꊷꮵ횳뮲∬헖쮶귔‬펽�쿉﯋귔Ⱒⰴ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㌱䑁㌲ⰱ탖�놱꫓쿄ⵈⰱ㤳㤮㐵㌰ㄬ㤱㔮㘹㐱〬㈬㄰⼷㘰㈯‴ㄲ㐺㨵〰윬믘뗊Ⲻ�쫖㈬㄰⸸ㄹ㤹㈬〴⸴㐴ⰳ㌲⸸㜵㤳ⰶ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙㄴ測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲ㄠ㨵〰〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㈲㔳㘮㐷ⰳ㠱㘲㔮㐵ⰹ㐴⸸㐲㐹ⰲ믍ꊷꊲ틇횳∬��낼ꮴ귔‬ﺷ偓Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲ㄠ㨵㔱〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍㄲㄹ㜮㈸ⰷ㤱㜶㌮㤶ⰸ㈴⸰ㄷ㌸ⰲ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲㈠㨰〳〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㜲㔶㐮㌱ㄬ㄰⸲㘵㤳ⰶ㔶⸲㐸㈶ⰵ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲㈠㨰〳〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㜲㔶㐮㌱ㄬ㄰⸲㘵㤳ⰶ㔶⸲㐸㈶ⰵ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲㈠㨰㔱〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㌲㐳㈮㠶ⰶ〱㜲㌮㜲㔬㘰㈮㈰ⰱ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲ㄠ㨰〳〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍㄲ㠳㜮㠷ⰶ㠱㌹㠮㤷ⰵ㔳⸲㈱〲ⰷ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䄳㉄ㄳ혬룐쟛뇸뒱폳쒪䣏ㄭ㌬⸹㔹〴ⰳㄱ⸹㤵ㄶⰴⰰ〲㜱〯⼶㐲㈠㨱㔱〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㈱ㄷ㤮㠴ⰱ㈱〳㐮㔸ⰵ㌲⸵㠸㘵촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㐬ⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ〱䍅㍅ⰷ뷉ꎺ�ⵈⰱ㤳㤮㔶ⰱㄱ⸹㠷㜳〬㈬㄰⼷㘰㈯‴㌱ㄺ㨵〰윬믘뗊Ⲻ폊뗆싏��쫂춵㈬㐶⸹㐳㈶ㄬ㐲⸶㜵㐰㐬㐴㌮㘰ⰷ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲ㄠ㨲㔱〺ⰰ�쪻몵츬훞닊ⳮㄱ㌹㘮㠹ⰹ㘴㐰〮㈷ⰳ〲⸰㜵㔰ⰱ믍ꊷ뮲ꮵ횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲ㄠ㨳〰〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㐲㔶㘮㈱ⰸㄱ㠸㐮㔵㐬㌱㐮㌷ⰲ믍ꊷꊲ틇횳∬��낼ꮴ귔‬ﺷ偓Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㐲ㄠ㨷㔴〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㐲㜶㔮㘳ⰶ㌱㘷㌮㈵ⰳ〵⸶㔲㌷ⰵ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ〶測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䔰䕃㜳줬몽릣쟘싸ퟨ쏦䣭ㄭ㌬⸹㘹ㄵㄬ㤱㜮㌸ⰷⰰ〲㜱〯⼶㔲ㄠ㨱〳〺ⰰ�쪻몵쨬웓쾵퓂쯘싙뗊ⳍ㘲〴㔮㤹ⰹㄱ〸㤮㘶ⰳ㌴⸸㔸ㄵ촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㘬ⰰ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱㑂㌳ⰰ탊웒꾶샊춼﯆떳잳ⵈⰰ㠳㠮ㄳㄱⰶㄱ⸵〵ㄱ㐴㘬ⰰ〲㜱〯⼶㔲ㄠ㨳〳〺ⰰꎱꢶ츬훞닊ⳮ㘵㐲〮㤴㐬㜸⸳㄰ⰹ〲⸶㤳㌰ⰲ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙⰶ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱㈱㌵ⰵ늰캴퓗믈ꮹ냔ꮶⵈⰲ㤳㔮㌳㈰ㄬ㘱㘮㜵㐱㜬ⰰ〲㜱〯⼶㐲㈠㨳㔱〺ⰰ죀뮷츬훞닊ⳮ㠲㜱㔮㈵ⰷ㐲㔵㠮㤷ⰲㄱ⸴㌶㐰ⰷ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㔱ㄵ㌸ⰱ얹뇒﯆�ⵈⰱ㤳㘮㘵ㄴㄬ㠱㐮㘲㠲〬㈬㄰⼷㘰㈯′㔱㌺㨰〰찬짆ⲽ폊뗆싏��쫂춵ㄬ〹⸸㈵㔴ㄬ㠵⸵㈰ⰶ㜲⸵㈷㘳ⰳ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒ㔱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㔵㠱ㄳ뤬틅붱싰웭탻䣞ㄭ㌬⸹㔶㐶ⰱㄱ⸸㈴㈶ⰸⰰ〲㜱〯⼶㈲ㄠ㨵〳〺ⰰ워뷉쨬웓쾵퓂쯘싙뗊ⳍ㤱㠰㔮㐲ⰵ㔱㔸〮㘲㈬㔷㜮㌲㌶촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰵ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㔱ㄵ㌸ⰳ얹뇒﯆�ⵈⰳ㤳㘮㘵ㄴㄬ㠱㐮㘲㠲㈬〴㈬㄰⼷㘰㈯′㤱ㄺ㨵〰찬짆ⲽ폊뗆싏��쫂춵ㄬ㌳⸴㤸㜷〮〬ㄬ㘸㘮㈳ㄱ촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㠬測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㐱䕁㄰숬좹㢪숰쯃쎫폭잪勸啒匲ㄭ뤨뎤⧌㌬⸸㈱㤲㈳ㄬ㐱㌮㌳㔷ⰵ㘳ⰰ〲㜱〯⼶㔲ㄠ㨲㔱〺ⰰ꿊튼꿗쨬웓쾵퓂쯘싙뗊ⳍㄳ㌱㜮〲ⰷ㔱㔲㌮㤸ㄬ〴㘮㐵㌶촬랻늢뗮뎫탖닸늻ⳮ펽�쿉﯋귔㠬測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㘰䕆㈳測汵ⱬ⸰ⰰ⸰ⰰⰰ〲㜱〯⼶㐲ㄠ㨳〳〺ⰰ畮汬쨬웓쾵퓂쯘싙뗊ⳍㄱ㤸㌮㘷ⰷ㘱㌷㌮㐸ⰶ㔱⸴ㄳ㠹ⰱ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㜱䕃㌰ⰵ�ꇐ�꿗쿄ⵈⰲ㠳〮㈳㤷ㄬ㔱㔮〶㜱㤬ⰵ〲㜱〯⼶㐲㈠㨳〳〺ⰰ껋츬훞닊ⳮ㐷⸶㌸㌲ⰴ㈱㔹⸶㜶ⰶ㌱⸹㔲㐴ⰶ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙㄱ測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䌷ぅ㔳줬훮택늡ퟜ뒯쓥䣏㈭㌬⸸㌰㜲ⰹㄱ⸵㘵㄰ⰷ㔹㈬㄰⼷㘰㈯‴〰㌺㨰〰먬쯢Ⲯ폊뗆싏��쫂춵㈬㜱⸳㘶㜶〮〬㌬㈵㘮㈷㘷촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱㈰㌳ⰱ탊ꮹ늰횾ⵈⰱ㠳㠮〷ⰹㄱ⸵㜴ⰸ㌱ⰵ〲㜱〯⼶㐲ㄠ㨰㔴〺ⰰꎱꢶ쨬웓쾵퓂쯘싙뗊ⳍㄱ㠰㐮㜵ⰵ⸰ⰰ㠱⸲ㄸ㌳ⰹ믍ꊷꮵ횳뮲∬헖쮶귔‬펽�쿉﯋귔Ⱒⰵ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱㈰㌳ⰱ탊ꮹ늰횾ⵈⰱ㠳㠮〷ⰹㄱ⸵㜴ⰸ㌱ⰵ〲㜱〯⼶㐲㈠㨱〳〺ⰰꎱꢶ쨬웓쾵퓂쯘싙뗊ⳍ㌱㤷㤮㌸ⰹ㠸⸳㘱㜱ⰴ㐲⸲㈲㘸ⰸ믍ꊷꮵ횳뮲∬헖쮶귔‬펽�쿉﯋귔Ⱒⰵ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹㔱〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㜱〲㔮〱ⰵ⸰ⰰ㤱⸴㜰㌱ⰷ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱ㄺ㨵〰쀬럈ⲻ폊뗆싏��쫂춵ㄬ㈷⸰ㄵ㔰〮〬ㄬ㐹〮ㄷ㜳촬랻늢닮잢돒탖닸ⳮ헖쮶귔ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹㔱〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㜱〲㔮〱ⰵ⸰ⰰ㤱⸴㜰㌱ⰷ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱ㄺ㨵〰쀬럈ⲻ폊뗆싏��쫂춵ㄬ㈷⸰ㄵ㔰〮〬ㄬ㐹〮ㄷ㜳촬랻늢닮잢돒탖닸ⳮ헖쮶귔ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹〳〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㠵⸵㔲ⰵ⸰ⰰ㐲⸶㐱ㄷⰹ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱㌺㨰〰쀬럈ⲻ폊뗆싏��쫂춵㔬㔸㈮㔵〮〬㈬㘴ㄮ㜴㤱촬랻늢닮잢돒탖닸ⳮ헖쮶귔ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹〳〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㠵⸵㔲ⰵ⸰ⰰ㐲⸶㐱ㄷⰹ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱㌺㨰〰쀬럈ⲻ폊뗆싏��쫂춵㔬㔸㈮㔵〮〬㈬㘴ㄮ㜴㤱촬랻늢닮잢돒탖닸ⳮ헖쮶귔ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹〳〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㠵⸵㔲ⰵ⸰ⰰ㐲⸶㐱ㄷⰹ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱㌺㨰〰쀬럈ⲻ폊뗆싏��쫂춵㔬㔸㈮㔵〮〬㈬㘴ㄮ㜴㤱촬랻늢닮잢돒탖닸ⳮ헖쮶귔ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹〳〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㠵⸵㔲ⰵ⸰ⰰ㐲⸶㐱ㄷⰹ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱㌺㨰〰쀬럈ⲻ폊뗆싏��쫂춵㔬㔸㈮㔵〮〬㈬㘴ㄮ㜴㤱촬랻늢닮잢돒탖닸ⳮ헖쮶귔ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹〳〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㠵⸵㔲ⰵ⸰ⰰ㐲⸶㐱ㄷⰹ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱㐺㨵〰쀬럈ⲻ폊뗆싏��쫂춵ㄬ㘶⸶㐰㘶〮〬㐬㔸㔮㘸㜶촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱䄳ㅂⰲ첹늰꒹뗒냔�꿎ⵈⴲ㡌〰㌬⸹㘴㤱ⰵㄱ⸶〳㈳ⰷ㔱ⰰ〲㜱〯⼶㐲ㄠ㨹〳〺ⰰ죀뮷쨬웓쾵퓂쯘싙뗊ⳍ㠵⸵㔲ⰵ⸰ⰰ㐲⸶㐱ㄷⰹ믍ꊷꊲ틇횳혬뛕퓋튭Ⳳ㜱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㌶䉁㈱뤬냌릲튤풵린컜뮯䣡㈭䰭〸ⰰ㤳㐮ㄶ㔹ㄬ㘱㌮㌰㜲ㄬ〵㈬㄰⼷㘰㈯‴㤱㐺㨵〰쀬럈ⲻ폊뗆싏��쫂춵ㄬ㘶⸶㐰㘶〮〬㐬㔸㔮㘸㜶촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰷ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㘱㐰㍂ⰴ畮汬〮〮〬〬〬㈬㄰⼷㘰㈯″ㄱ㌺㨰〰測汵ⱬ폊뗆싏��쫂춵㜬⸲ⰵ⸰ⰰㄱ⸶ⰴ믍ꊷꮵ횳뮲봬뿓짚웏쯤퓻튭Ⳳⰸ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱㄱ䉅㌲ⰳ탊냔횽ﻋ쿄럂彈ⰰ㠳〮㔰㐲ㄬ㐱㔮㈱ⰲⰰ〲㜱〯⼶㐲㈠㨰〰〺ⰰ꿊튼꿗쨬웓쾵퓂쯘싙뗊ⳍ㜱㌲ㄮ㜲ⰹ㌶⸹㘲㈵ⰶ㔱⸳〲ㄳⰶ믍ꊷꊲ틇횳뜬컾叱ⱐⰳ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㜱〶㌰ⱁ뒲럍꿗ⵈⰱ㠳〮㈷㌴ㄬ㘱㔮㘴㠹㌬〴㈬㄰⼷㘰㈯‴㜱㐺㨵〰눬훗ⳝ�쫖㈬ㄲ⸸㠳㜷㘬㐹⸹㜹ⰲ㔱⸳ㄹ〵ⰱ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙⰱ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱㑂㌳ⰰ탊웒꾶샊춼﯆떳잳ⵈⰰ㠳㠮ㄳㄱⰶㄱ⸵〵ㄱ㐴㘬ⰰ〲㜱〯⼶㐲㈠㨰〰〺ⰰꎱꢶ츬훞닊ⳮ㈱〷㤮㜹ⰷ㌲㠵㤮㐲ⰳ㔱⸵㌸㤴ⰸ믍ꊷ춺횳料뮲올쯤⣻ꇐ언쫂싊ﺼ좵Ⱙⰶ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㔱㐳㌳ⰲ떳뷉ⵈⰲ㤳㜮㌳ⰲㄱ⸸〱㤸ⰴ㈱ⰰ〲㜱〯⼶㐲㈠㨳〰〺ⰰ워뷉츬훞닊ⳮ㜱㤵㐮㐴ⰲ㐳㈳㈮㤷ⰳ㌱⸴㌷㔲촬랻몢돍탖뻸당늻ⳮ﯋퀨뢡싅쫊볂뗾⧈㈬測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䈲㌴〳쨬쟐틸뛆쪯변웍돻뎵䣇〭㌬⸸㌸ㄱ㘱ㄬ㔱㔮㄰㐱ⰴ〶㈬㄰⼷㘰㈯‴㤱㌺㨰〰넬뚣Ⲩ폊뗆싏��쫂춵ㄬ㄰⸴㜵㈸ⰵ㈹⸱〹㜳ㄬ㌴㈮㘱㠷촬랻늢뗮뎫탖닸늻ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㘬測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䈲㌴〳쨬쟐틸뛆쪯변웍돻뎵䣇〭㌬⸸㌸ㄱ㘱ㄬ㔱㔮㄰㐱ⰴ〶㈬㄰⼷㘰㈯‴㤱ㄺ㨵〰넬뚣Ⲩ폊뗆싏��쫂춵㐬㜶㘮㐰ⰲㄸ⸶㠴㤳ㄬ㤶㔮㌹㈰촬랻늢뗮뎫탖닸늻ⳮ펽�쿉﯋귔㘬測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㐱㥁〳听쉔좹뒪웤뷁웖쫦슯䎷ㅁ〸䠰〭㌬⸸〱ㄶⰷㄱ⸴〳㐹ⰶⰰ〲㜱〯⼶㌲㈠㨱〰〺ⰰ꿊튼꿗츬훞닊ⳮ〲ㄳ㔮㤶ⰳ㈳㌸㜮㈱ⰴ㠱⸷㔱〵ⰱ믍ꊷ뮲ꮵ횳뜬컾叱ⱐ〱測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ㐱㥁〳听쉔좹뒪웤뷁웖쫦슯䎷ㅁ〸䠰〭㌬⸸〱ㄶⰷㄱ⸴〳㐹ⰶⰰ〲㜱〯⼶㌲㈠㨰〳〺ⰰ꿊튼꿗쨬웓쾵퓂쯘싙뗊ⳍ㌱ㄵ㤮㘹ⰲ㈱㤲〮㐵ⰲ㘱⸴㐸㘵촬랻늢닮잢돒탖닸ⳮ펽�쿉﯋귔ㄬⰰ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱㄱう㍆ⰸ맂꫈ꎺ뷉횽놱럍ⵈⰲ㠳ㄮ㘱㐵ㄬ㐱㌮〲㘱㈬〴㈬㄰⼷㘰㈯‴ㄲㄺ㨵〰쨬벯ퟒⲯ폊뗆싏��쫂춵㈬㐴⸱㘵ⰱ〹⸷㌲㘶ⰳ㜳⸱㜷㌹ⰶ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒⰹ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱㄱう㍆ⰸ맂꫈ꎺ뷉횽놱럍ⵈⰲ㠳ㄮ㘱㐵ㄬ㐱㌮〲㘱㈬〴㈬㄰⼷㘰㈯‴㠱㌺㨰〰쨬벯ퟒⲯ폊뗆싏��쫂춵㌬㌶⸱㐸ⰲ㜵⸸㌲㜵㘬㤰〮㘵ⰳ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒⰹ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱㄱ䄴㌹ⰰ呔맂꫈쇆횽꿊럂䅃㠱〰ⵈⰰ㠳ㄮ㘰㜱ㄬ㐱㌮㤰㘴〬㈬㄰⼷㘰㈯‵㈱ㄺ㨵〰쨬벯ퟒⲯ폊뗆싏��쫂춵㈬〵⸸ㄹ㘴ㄬ㐵⸸㤰㐲㌬㈱㠮〷㐹촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲ㄬⰰ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱㄱう㍆ⰸ맂꫈ꎺ뷉횽놱럍ⵈⰲ㠳ㄮ㘱㐵ㄬ㐱㌮〲㘱㈬〴㈬㄰⼷㘰㈯‵㈱ㄺ㨵〰쨬벯ퟒⲯ폊뗆싏��쫂춵㈬ㄵ⸳㜹㈰ㄬ㠶⸲㜷ㄸ㌬〷㜮〸㔱촬랻늢닮잢돒탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㤬測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䘱䘰㠳숬좹몪즣뒽뷳뇖춱䢷㈭㌬⸸ㄱ㔶ⰴㄱ⸴㈳㄰ⰶ㐲ⰰ〲㜱〯⼶㔲ㄠ㨱㔱〺ⰰ꿊튼꿗쨬웓쾵퓂쯘싙뗊ⳍ㘳ㄸ〮ㄹㄬ㈱⸵㤹㐳㜬㘰㘮㤲ⰸ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒⰹ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱㜱㌳ⰲ輸잳꿃뷉꫓뾷ⵈⰲ㠳㤮㌳㘸ㄬ㔱㈮㈸㌲㈬〰㈬㄰⼷㘰㈯‴㜱㐺㨵〰넬뚣Ⲩ�쫖㈬㠱⸸㐶㈬㜲⸴㠸㘹ㄬㄹ㌮ㄸ㜷촬랻늢늻뗮뎫탖닸ⳮ혢뛕퓋튭Ⳳ봠뿓짚웏쯤퓻튭⋲㌬ⰲ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱㔹㌶ⰷ탊ꇐ뎼ꮶ쿄ⵈⰰ㠳㠮㠱ㄸⰳㄱ⸵ㄴ㔹㔬ⰰ〲㜱〯⼶㌲㈠㨰〳〺ⰰꎱꢶ쨬웓쾵퓂쯘싙뗊ⳍ㐱㘷㘮㐳ㄬㄶ⸵㐸㜶㈬〴㈮㠸ⰲ믍ꊷꊲ틇횳∬헖쮶귔‬펽�쿉﯋귔Ⱒⰳ畮汬猬牴慥Ɑ〲㜱㘰㘲㐊〶ㄱ㈱㜱㌳ⰲ輸잳꿃뷉꫓뾷ⵈⰲ㠳㤮㌳㘸ㄬ㔱㈮㈸㌲㈬〰㈬㄰⼷㘰㈯‴〲〺㨰〰넬뚣Ⲩ폊뗆싏��쫂춵㈬㈸⸲ㄹ㘴㘬〸㈮ㄳⰳ㜵⸰㔱㔸ⰷ믍ꊷꊲ틇횳∬��낼ꮴ귔‬ﺷ偓Ⱒ㈳測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼㘴㄰ㄱ䘵㔰㈳쨬쟐뇸뫵퟾풯캰䣷㈭㌬⸹㘵㐴ⰷㄱ⸸㜱㜸ⰶ㈱ⰰ〲㜱〯⼶㐲ㄠ㨶〰〺ⰰ워뷉츬훞닊ⳮ㈳㈱㌮㘱ⰷ〵㜰㠮㤳㈬㌱㠮㔱㌹촬랻몢돍탖뻸당늻ⳮ﯋퀨뢡싅쫊볂뗾⧈㌬測汵ⱬ瑳敲浡㈬㄰〷㈶ਸ਼"
              DTS:DTSID="{285FE8F9-B36D-43A2-B6DD-FC82663D5013}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5901622-2298-4D61-8252-85E6C1355CEB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KQICompleteFile">
      <DTS:VariableValue
        DTS:DataType="8">F:\WDSystemData\Complete\KQI\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FC959C0-8A0B-44EC-BFB0-FBD73460FEA0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KQIloadFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{794BCBF6-1680-4001-A653-729FCC04770F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KQILocFile">
      <DTS:VariableValue
        DTS:DataType="8">F:\WDSystemData\WorkData\KQI\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F7F89112-1ED6-40EB-9A3A-3096E1D57D84}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KQIRemote">
      <DTS:VariableValue
        DTS:DataType="8">F:\WDSystemData\FTPDATA\hbapsdata\seqbadcell\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach 循环容器"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach 循环容器"
      DTS:DTSID="{8654E5D2-3B8B-4A41-A0B0-89B533466553}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach 循环容器">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{4FE09F37-FDEA-44FA-AE74-BBF1AB67BBC1}"
        DTS:ObjectName="{4FE09F37-FDEA-44FA-AE74-BBF1AB67BBC1}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::KQILocFile]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="F:\WDSystemData\WorkData\KQI\" />
            <FEFEProperty
              FileSpec="*.csv" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\保存入库数据文件"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:DelayValidation="True"
          DTS:Description="文件系统任务"
          DTS:DTSID="{248FFA2E-1931-48F3-9AF2-D1EBBA2800A1}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="保存入库数据文件"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::KQIloadFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::KQICompleteFile"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\数据流任务"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="数据流任务"
          DTS:DTSID="{E793C7F1-08F7-48D4-BE6B-17B7CD4C23BB}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="数据流任务"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              engineThreads="32"
              version="1">
              <components>
                <component
                  refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标"
                  componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                  contactInfo="OLE DB 目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;4"
                  description="OLE DB 目标"
                  name="OLE DB 目标"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="指定用于打开行集的数据库对象的名称。"
                      name="OpenRowset">"KPIMIS"."DATA_KQI3DAY"</property>
                    <property
                      dataType="System.String"
                      description="指定包含用于打开行集的数据库对象名的变量。"
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="要执行的 SQL 命令。"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="指定当数据源中没有代码页信息时使用的列代码页。"
                      name="DefaultCodePage">936</property>
                    <property
                      dataType="System.Boolean"
                      description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="指定用于访问数据库的模式。"
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="指示是否将为标识列提供的值复制到目标。如果设置为 False，则将在目标中为标识列自动生成值。仅当启用了快速加载时适用。"
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="指示对于包含 Null 值的列是否将 Null 值插入目标中。如果为 False，则对于包含 Null 值的列会将其默认值插入目标中。仅当启用了快速加载时适用。"
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="指定将用于快速加载的选项。仅当启用了快速加载时适用。"
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="指定在插入数据期间何时发出提交命令。如果值为 0，则指定在数据插入结束时发出一个提交命令。仅当启用了快速加载时适用。"
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Connections[OleDbConnection]"
                      connectionManagerID="{EF1B0189-C787-45D6-ABB7-2CA7A436C369}:external"
                      connectionManagerRefId="Project.ConnectionManagers[localhost_orcl.mis]"
                      description="指定用于访问数据库的 OLE DB 运行时连接。"
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入]"
                      errorOrTruncationOperation="插入"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB 目标输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[SC_ENBID]"
                          cachedDataType="numeric"
                          cachedName="SC_ENBID"
                          cachedPrecision="18"
                          externalMetadataColumnId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[SC_ENBID]"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[SC_ENBID]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[SC_LCRID]"
                          cachedDataType="numeric"
                          cachedName="SC_LCRID"
                          cachedPrecision="18"
                          externalMetadataColumnId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[SC_LCRID]"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[SC_LCRID]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[ECI]"
                          cachedDataType="numeric"
                          cachedName="ECI"
                          cachedPrecision="18"
                          externalMetadataColumnId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[ECI]"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[ECI]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[CITY]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="CITY"
                          externalMetadataColumnId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CITY]"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CITY]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[CELLNAME]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="CELLNAME"
                          externalMetadataColumnId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CELLNAME]"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CELLNAME]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[KQIINFO]"
                          cachedDataType="wstr"
                          cachedLength="250"
                          cachedName="KQIINFO"
                          externalMetadataColumnId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[KQIINFO]"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[KQIINFO]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[CREATETIME 的副本]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CREATETIME 的副本"
                          externalMetadataColumnId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CREATETIME]"
                          lineageId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[CREATETIME 的副本]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[SC_ENBID]"
                          dataType="wstr"
                          length="38"
                          name="SC_ENBID" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[SC_LCRID]"
                          dataType="wstr"
                          length="38"
                          name="SC_LCRID" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[ECI]"
                          dataType="wstr"
                          length="38"
                          name="ECI" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CITY]"
                          dataType="wstr"
                          length="50"
                          name="CITY" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[MANUFACTOR]"
                          dataType="wstr"
                          length="50"
                          name="MANUFACTOR" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CELLNAME]"
                          dataType="wstr"
                          length="200"
                          name="CELLNAME" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[KQIINFO]"
                          dataType="wstr"
                          length="250"
                          name="KQIINFO" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[KQIINDEX]"
                          dataType="wstr"
                          length="300"
                          name="KQIINDEX" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[REASON]"
                          dataType="wstr"
                          length="300"
                          name="REASON" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[MEASURES]"
                          dataType="wstr"
                          length="600"
                          name="MEASURES" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CREATETIME]"
                          dataType="dbTimeStamp"
                          name="CREATETIME" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Outputs[OLE DB 目标错误输出]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB 目标错误输出"
                      synchronousInputId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach 循环容器\数据流任务\数据转换"
                  componentClassID="{62B1106C-7DB8-4EC8-ADD6-4C664DFFC54A}"
                  contactInfo="数据转换;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
                  description="数据转换"
                  name="数据转换"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach 循环容器\数据流任务\数据转换.Inputs[数据转换输入]"
                      name="数据转换输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\数据转换.Inputs[数据转换输入].Columns[CREATETIME]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="CREATETIME"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CREATETIME]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\数据转换.Inputs[数据转换输入].Columns[ECI]"
                          cachedDataType="numeric"
                          cachedName="ECI"
                          cachedPrecision="18"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[ECI]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出]"
                      exclusionGroup="1"
                      name="数据转换输出"
                      synchronousInputId="Package\Foreach 循环容器\数据流任务\数据转换.Inputs[数据转换输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[CREATETIME 的副本]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[CREATETIME 的副本]"
                          name="CREATETIME 的副本"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="指定用作转换数据源的输入列。"
                              name="SourceInputColumnLineageID">#{Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CREATETIME]}</property>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[ECI 的副本]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[ECI 的副本]"
                          name="ECI 的副本"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="指定用作转换数据源的输入列。"
                              name="SourceInputColumnLineageID">#{Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[ECI]}</property>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换错误输出]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="数据转换错误输出"
                      synchronousInputId="Package\Foreach 循环容器\数据流任务\数据转换.Inputs[数据转换输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach 循环容器\数据流任务\查找"
                  componentClassID="{671046B0-AA63-4C9F-90E4-C06E0B710CE3}"
                  contactInfo="查找;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;6"
                  description="通过在表中查找值，将其他列与数据流联接起来。例如，将 &quot;employee id&quot; 列与 employees 表联接，以获取 &quot;hire date&quot; 和 &quot;employee name&quot;。建议在可将查找表放入内存中的情况下使用此转换。"
                  name="查找"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="指定生成查找表的 SQL 语句。"
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from "KPIMIS"."DATA_KQI3DAY"</property>
                    <property
                      dataType="System.String"
                      description="指定使用参数生成查找表的 SQL 语句。"
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from "KPIMIS"."DATA_KQI3DAY") "refTable"
where "refTable"."CREATETIME" = ? and "refTable"."ECI" = ?</property>
                    <property
                      dataType="System.Int32"
                      description="指定用于访问引用数据集的连接类型。"
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="指定查找表的缓存类型。"
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="指定查找转换如何处理在引用数据集中无匹配项的行。"
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="指定为在引用数据集中没有匹配项的行分配的缓存百分比。"
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="引用缓存在 32 位平台上的最大内存使用量。"
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="引用缓存在 64 位平台上的最大内存使用量。"
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="指示是否引用 XML 格式的元数据。"
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SC_ENBID" dataType="DT_WSTR" length="40" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SC_LCRID" dataType="DT_WSTR" length="40" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ECI" dataType="DT_WSTR" length="40" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CITY" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MANUFACTOR" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CELLNAME" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="KQIINFO" dataType="DT_WSTR" length="250" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="KQIINDEX" dataType="DT_WSTR" length="300" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="REASON" dataType="DT_WSTR" length="300" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MEASURES" dataType="DT_WSTR" length="600" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CREATETIME" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定沿袭标识符列表，这些标识符映射到 SQLCommand 属性中 SQL 语句使用的参数。列表中的项与项之间用分号分隔。"
                      name="ParameterMap">#{Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[CREATETIME 的副本]};#{Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[ECI 的副本]};</property>
                    <property
                      dataType="System.Int32"
                      description="指定当数据源中没有代码页信息时使用的列代码页。"
                      name="DefaultCodePage">936</property>
                    <property
                      dataType="System.Boolean"
                      description="确定在使用完全缓存模式时引用数据中的重复键是否应视作错误。"
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach 循环容器\数据流任务\查找.Connections[OleDbConnection]"
                      connectionManagerID="{EF1B0189-C787-45D6-ABB7-2CA7A436C369}:external"
                      connectionManagerRefId="Project.ConnectionManagers[localhost_orcl.mis]"
                      description="用于访问查找数据的连接管理器。"
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach 循环容器\数据流任务\查找.Inputs[查找输入]"
                      name="查找输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\查找.Inputs[查找输入].Columns[ECI 的副本]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ECI 的副本"
                          lineageId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[ECI 的副本]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="指定某列在引用表中联接的列。"
                              name="JoinToReferenceColumn">ECI</property>
                            <property
                              dataType="System.Null"
                              description="指定属于某列复制源的引用表中的列。"
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\数据流任务\查找.Inputs[查找输入].Columns[CREATETIME 的副本]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CREATETIME 的副本"
                          lineageId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出].Columns[CREATETIME 的副本]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="指定某列在引用表中联接的列。"
                              name="JoinToReferenceColumn">CREATETIME</property>
                            <property
                              dataType="System.Null"
                              description="指定属于某列复制源的引用表中的列。"
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找匹配输出]"
                      errorOrTruncationOperation="查找"
                      exclusionGroup="1"
                      name="查找匹配输出"
                      synchronousInputId="Package\Foreach 循环容器\数据流任务\查找.Inputs[查找输入]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找无匹配输出]"
                      description="用于处理在引用数据集中无匹配项的行的查找输出。当 NoMatchBehavior 属性设置为“将没有匹配项的行发送至无匹配输出。”时使用此输出。"
                      exclusionGroup="1"
                      name="查找无匹配输出"
                      synchronousInputId="Package\Foreach 循环容器\数据流任务\查找.Inputs[查找输入]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找错误输出]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="查找错误输出"
                      synchronousInputId="Package\Foreach 循环容器\数据流任务\查找.Inputs[查找输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach 循环容器\数据流任务\脚本组件"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="包含并运行自定义脚本代码。例如，应用限制 &quot;income&quot; 列中的有效值范围的业务规则，或在两个列中添加值并计算和的平均值。;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;8"
                  description="包含并运行自定义脚本代码。例如，应用限制 &quot;income&quot; 列中的有效值范围的业务规则，或在两个列中添加值并计算和的平均值。"
                  name="脚本组件"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="存储组件的源代码"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9586a5757c234fe9823ca25b395a749f.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ECBF7C0F-AC5B-44EE-BE7C-1D873C963926}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_9586a5757c234fe9823ca25b395a749f</RootNamespace><AssemblyName>SC_FDC80BE3D5BF4FD28924E4719C1A93C7</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using System.Text.RegularExpressions;
using System.Collections.Generic;
using System.Text;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private StreamReader textReader;
    private string exportedAddressFile;

    public override void AcquireConnections(object Transaction)
    {

        IDTSConnectionManager100 connMgr = this.Connections.conn;
        exportedAddressFile = (string)connMgr.AcquireConnection(null);

    }

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        textReader = new StreamReader(exportedAddressFile, Encoding.Default);
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        textReader.Close(); 
    }

    public override void CreateNewOutputRows()
    {
        string nextLine;
        string[] columns;

        char[] delimiters;
        delimiters = ",".ToCharArray();

        char[] yinghao;
        yinghao = "\"".ToCharArray();

        nextLine = textReader.ReadLine(); 
        nextLine = textReader.ReadLine();
        while (nextLine != null)
        {
            try {
                List<String> list = new List<string>();
                String[] arr = nextLine.Split(yinghao);
                String linestr = "";
                for (int i = 1; i < arr.Length; )
                {
                    if (!String.IsNullOrEmpty(arr[i]))
                        arr[i] = arr[i].Replace(",", "|");
                    i = i + 2;
                }
                for (int j = 0; j < arr.Length; j++)
                {
                    if (j == 0)
                    {
                        linestr = arr[j];
                    }
                    else
                    {
                        linestr = linestr + "\"" + arr[j];
                    }
                }
                String[] dataarr = linestr.Split(delimiters);
                int l=dataarr[0].Length;
                String poi = dataarr[0].Substring(5, l - 5);
                String enbid = poi.Substring(0, poi.Length - 2);
                String lcrid = poi.Substring(poi.Length - 2, 2);

                long i_enbid = Convert.ToInt64(enbid, 16);
                long i_lcrid = Convert.ToInt64(lcrid, 16);
                String kpiinfo = "";
                if (!String.IsNullOrEmpty(dataarr[7]))
                    kpiinfo = "质差类型:" + dataarr[7];
                if (!String.IsNullOrEmpty(dataarr[8]))
                {
                    if (String.IsNullOrEmpty(kpiinfo))
                        kpiinfo = "页面打开时延:" + dataarr[8];
                    else
                        kpiinfo = kpiinfo + "、页面打开时延:" + dataarr[8];
                }
                if (!String.IsNullOrEmpty(dataarr[9]))
                {
                    if (String.IsNullOrEmpty(kpiinfo))
                        kpiinfo = "视频下载速率:" + dataarr[9];
                    else
                        kpiinfo = kpiinfo + "、视频下载速率:" + dataarr[9];
                }
                if (!String.IsNullOrEmpty(dataarr[10]))
                {
                    if (String.IsNullOrEmpty(kpiinfo))
                        kpiinfo = "页面响应时延:" + dataarr[10];
                    else
                        kpiinfo = kpiinfo + "、页面响应时延" + dataarr[10];
                }

                exportBuffer.AddRow();
                exportBuffer.SCENBID = i_enbid;
                exportBuffer.SCLCRID = i_lcrid;
                exportBuffer.ECI = i_enbid * 256 + i_lcrid;
                exportBuffer.CELLNAME = dataarr[1].ToString();
                exportBuffer.CITY = dataarr[6].ToString();
                exportBuffer.KQIINFO = kpiinfo;
                try {
                    String tstr=dataarr[5];
                    int f=tstr.IndexOf('/');
                    int last=tstr.LastIndexOf('/');
                    if (last - f < 3)
                    {
                        String fstr = tstr.Substring(0, f+1);
                        String sstr = tstr.Substring(f+1, tstr.Length-f-1);
                        tstr = fstr + "0" + sstr;
                    }

                    exportBuffer.CREATETIME = tstr;
                }
                catch
                {
                }
            }
            catch(Exception err){
                
            }
            
            nextLine = textReader.ReadLine();
        }  
    }

    private String gettime(String time)
    {
        //2017年5月30日 17时30分16秒 GMT+08:00
        int n = time.IndexOf("年");
        int y = time.IndexOf("月");
        int r = time.IndexOf("日");
        string mm = time.Substring(n + 1, y - n - 1);
        string dd = time.Substring(y + 1, r - y - 1);
        if (mm.Length == 1)
        {
            time = time.Replace(mm + "月", "0" + mm + "月");
        }
        if (dd.Length == 1)
        {
            time = time.Replace(dd + "日", "0" + dd + "日");
        }
        String createtime = time.Replace("年", "-").Replace("月", "-").Replace("日", "")
            .Replace("时", ":").Replace("分", ":").Replace("秒", "").Replace(" GMT+08:00", "");
        return createtime;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public exportBuffer exportBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != exportBuffer)
        {
            exportBuffer.SetEndOfRowset();
            exportBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"export"))
            {
                exportBuffer = new exportBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 conn
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"conn").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9586a5757c234fe9823ca25b395a749f.Properties.Settings.get_Default():SC_9586a5757c234fe9823ca25b395a749f.Properties.Sett" +
    "ings")]

namespace SC_9586a5757c234fe9823ca25b395a749f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class exportBuffer: ScriptBuffer

{
    public exportBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal SCENBID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool SCENBID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String CITY
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CITY_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String MANUFACTOR
    {
        set
        {
            this[2] = value;
        }
    }
    public bool MANUFACTOR_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public Decimal SCLCRID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool SCLCRID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String CELLNAME
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CELLNAME_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public Decimal ECI
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ECI_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String KQIINFO
    {
        set
        {
            this[6] = value;
        }
    }
    public bool KQIINFO_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String KQIINDEX
    {
        set
        {
            this[7] = value;
        }
    }
    public bool KQIINDEX_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String REASON
    {
        set
        {
            this[8] = value;
        }
    }
    public bool REASON_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String MEASURES
    {
        set
        {
            this[9] = value;
        }
    }
    public bool MEASURES_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    public String CREATETIME
    {
        set
        {
            this[10] = value;
        }
    }
    public bool CREATETIME_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_9586a5757c234fe9823ca25b395a749f</msb:CodeName>
		<msb:DisplayName>SC_9586a5757c234fe9823ca25b395a749f</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{B879927E-1F56-4500-877C-1697753ADDFE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_9586a5757c234fe9823ca25b395a749f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9586a5757c234fe9823ca25b395a749f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9586a5757c234fe9823ca25b395a749f")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9586a5757c234fe9823ca25b395a749f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9586a5757c234fe9823ca25b395a749f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9586a5757c234fe9823ca25b395a749f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9586a5757c234fe9823ca25b395a749f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9586a5757c234fe9823ca25b395a749f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="存储组件的二进制表示形式"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_FDC80BE3D5BF4FD28924E4719C1A93C7.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHS4VVkAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAAzkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHhBAABTAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1CEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
QQAAAAAAAEgAAAACAAUAkCgAAOgYAAABAAAAAAAAANgnAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMmAAAGfQEAAAQCAnMoAAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvJAAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzDAAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
BioAEzADAB8AAAACAAARAnsBAAAEbycAAAYKAgYUbxEAAAp0GQAAAX0FAAAEKnYCKBIAAAoCAnsF
AAAEKBMAAApzFAAACn0EAAAEKkoCKBUAAAoCewQAAARvFgAACiobMAUA4gIAAAMAABFyDwAAcG8X
AAAKC3ITAABwbxcAAAoMAnsEAAAEbxgAAAoKAnsEAAAEbxgAAAoKOKgCAABzGQAACiYGCG8aAAAK
DXIXAABwEwQXEwUrKAkRBZooGwAACi0XCREFCREFmnIPAABwchkAAHBvHAAACqIRBRhYEwURBQmO
aTLRFhMGKyQRBi0ICREGmhMEKxIRBHITAABwCREGmigdAAAKEwQRBhdYEwYRBgmOaTLVEQQHbxoA
AAoTBxEHFppvHgAAChMIEQcWmhsRCBtZbx8AAAoTCREJFhEJbx4AAAoYWW8fAAAKEwoRCREJbx4A
AAoYWRhvHwAAChMLEQofECggAAAKEwwRCx8QKCAAAAoTDXIXAABwEw4RBx2aKBsAAAotEHIdAABw
EQcdmighAAAKEw4RBx6aKBsAAAotLREOKBsAAAosEnIpAABwEQcemighAAAKEw4rEhEOcjkAAHAR
Bx6aKB0AAAoTDhEHHwmaKBsAAAotLxEOKBsAAAosE3JLAABwEQcfCZooIQAAChMOKxMRDnJbAABw
EQcfCZooHQAAChMOEQcfCpooGwAACi0vEQ4oGwAACiwTcm0AAHARBx8KmighAAAKEw4rExEOcn0A
AHARBx8KmigdAAAKEw4CewMAAARvIwAABgJ7AwAABBEMKCIAAApvDQAABgJ7AwAABBENKCIAAApv
EwAABgJ7AwAABBEMIAABAABqWhENWCgiAAAKbxcAAAYCewMAAAQRBxeabyMAAApvFQAABgJ7AwAA
BBEHHJpvIwAACm8PAAAGAnsDAAAEEQ5vGQAABhEHG5oTDxEPHy9vJAAAChMQEQ8fL28lAAAKExER
EREQWRkvNxEPFhEQF1hvHwAAChMSEQ8REBdYEQ9vHgAAChEQWRdZbx8AAAoTExESco0AAHAREygd
AAAKEw8CewMAAAQRD28hAAAG3gMm3gDeAybeAAJ7BAAABG8YAAAKCgY6Uv3//yoAAEE0AAAAAAAA
XQIAAGoAAADHAgAAAwAAAAMAAAEAAAAAMwAAAJkCAADMAgAAAwAAAB4AAAETMAUADQEAAAQAABED
cpEAAHBvJgAACgoDcpUAAHBvJgAACgsDcpkAAHBvJgAACgwDBhdYBwZZF1lvHwAACg0DBxdYCAdZ
F1lvHwAAChMECW8eAAAKFzMjAwlylQAAcCghAAAKco0AAHAJcpUAAHAoHQAACm8cAAAKEAERBG8e
AAAKFzMlAxEEcpkAAHAoIQAACnKNAABwEQRymQAAcCgdAAAKbxwAAAoQAQNykQAAcHKdAABwbxwA
AApylQAAcHKdAABwbxwAAApymQAAcHIXAABwbxwAAApyoQAAcHKlAABwbxwAAApyqQAAcHKlAABw
bxwAAApyrQAAcHIXAABwbxwAAApysQAAcHIXAABwbxwAAAoTBREFKh4CKAEAAAYqKgIDBAUoJwAA
Cio6AhYDjAgAAAEoKAAACipaAywIAhYoKQAACipyxwAAcHMqAAAKeiYCFwMoKAAACipaAywIAhco
KQAACipyxwAAcHMqAAAKeiYCGAMoKAAACipaAywIAhgoKQAACipyxwAAcHMqAAAKejoCGQOMCAAA
ASgoAAAKKloDLAgCGSgpAAAKKnLHAABwcyoAAAp6JgIaAygoAAAKKloDLAgCGigpAAAKKnLHAABw
cyoAAAp6OgIbA4wIAAABKCgAAAoqWgMsCAIbKCkAAAoqcscAAHBzKgAACnomAhwDKCgAAAoqWgMs
CAIcKCkAAAoqcscAAHBzKgAACnomAh0DKCgAAAoqWgMsCAIdKCkAAAoqcscAAHBzKgAACnomAh4D
KCgAAAoqWgMsCAIeKCkAAAoqcscAAHBzKgAACnoqAh8JAygoAAAKKl4DLAkCHwkoKQAACipyxwAA
cHMqAAAKeioCHwoDKCgAAAoqXgMsCQIfCigpAAAKKnLHAABwcyoAAAp6HgIoKwAACioeAigsAAAK
Kh4CKC0AAAoqOgIoLgAACgIDfQYAAAQqggJ7BgAABG8vAAAKbzAAAApyBQEAcG8xAAAKbzIAAAoq
OgIoLgAACgIDfQcAAAQqHgIoLgAACioAAAATMAIALQAAAAUAABF+CAAABC0gcg8BAHDQBwAAAig0
AAAKbzUAAApzNgAACgoGgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCoafgoAAAQqLnMuAAAGgAoA
AAQqHgIoOQAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAAAgJAAAjfgAAdAkAAIwLAAAjU3RyaW5ncwAAAAAAFQAAhAEAACNVUwCEFgAAEAAAACNHVUlE
AAAAlBYAAFQCAAAjQmxvYgAAAAAAAAACAAABVxWiCQkBAAAA+iUzABYAAAEAAAApAAAACAAAAAoA
AAAvAAAAIgAAADkAAAAPAAAABQAAAAQAAAAaAAAAGwAAAAEAAAABAAAABgAAAAEAAAAAAAoAAQAA
AAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgCYAc0ABgCnAc0ACgDfAdUBCgA9AhQBFgAYBfAE
CgBQBT8FCgCBBWwFCgBvBlUGCgCaBogGCgCxBogGCgDOBogGCgDtBogGCgAGB4gGCgAfB4gGCgA6
B4gGCgBVB4gGCgBuB4gGCgCnB4cHCgDHB4cHBgAmCM0ACgBfCBQBCgByCGYICgB7CNUBCgC8CKEI
CgD7CBQBCgA0CRQBCgBPCRQBGgC2CY0JGgDlCY0JGgAoCo0JCgCFCnIKCgCiChQBCgCnChQBCgDL
CogGDgD3CuEKDgAQC+EKCgAlC4cHAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAA
CAAEAAYAAQAQAEsAAAAJAAYADAABABAAWAAAAA0ABgAmAAEAEABkAAAADQAHACgAAAAQAG4AeAAN
AAgAKQAAARAApwB4ABEACgAtAAYAWAATAAYAZAAXAAYASwAfAAEA7AEvAAEA9wEzAAEAvQRrAAEA
vQRrABEAYAV/ABEAjQWDABEA0QWhAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgFVARsAAQByIAAAAACB
AGMBGwABAJAgAAAAAMYAtQEjAAEA5SAAAAAAxgHBARsABQDoIAAAAADGAAsCNgAFABMhAAAAAMYA
HgIbAAYAMSEAAAAAxgApAhsABgBEIQAAAADGAMEBGwAGAGgkAAAAAIEANQI7AAYAgSUAAAAAhhhP
ARsABwCJJQAAAACGGE8BQAAHAJQlAAAAAIYIRQJKAAoAoyUAAAAAhghRAlAACwC6JQAAAACGCGQC
VQAMAMQlAAAAAIYIbQJQAA0A2yUAAAAAhgh9AlUADgDlJQAAAACGCIwCUAAPAPwlAAAAAIYIogJK
ABAACyYAAAAAhgiuAlAAEQAiJgAAAACGCMECVQASACwmAAAAAIYIzgJQABMAQyYAAAAAhgjiAkoA
FABSJgAAAACGCOoCUAAVAGkmAAAAAIYI+QJVABYAcyYAAAAAhggFA1AAFwCKJgAAAACGCBgDVQAY
AJQmAAAAAIYIJQNQABkAqyYAAAAAhgg5A1UAGgC1JgAAAACGCEQDUAAbAMwmAAAAAIYIVgNVABwA
1yYAAAAAhghjA1AAHQDvJgAAAACGCHcDVQAeAPomAAAAAIYIhgNQAB8AEicAAAAAhgCcAxsAIAAa
JwAAAACGAKMDGwAgACInAAAAAIYAsgNaACAAKicAAAAAhhhPAW8AIAA5JwAAAACGCDEFdQAhAFon
AAAAAIYYTwFvACEAaScAAAAAgxhPARsAIgB0JwAAAACTCJ0FhwAiAK0nAAAAAJMIsQWMACIAtCcA
AAAAkwi9BZEAIgC8JwAAAACWCOEFpQAjAM8nAAAAAIYYTwEbACMAwycAAAAAkRhAC5cBIwAAAAEA
9QUAAAIA/QUAAAMABwYAAAQADwYAAAEAGQYAAAEAJQYAAAEAKgYAAAIAMQYAAAMADwYAAAEARQYA
AAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEA
RQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYAAAEARQYA
AAEARQYAAAEARQYAAAEASwYAAAEASwYAAAEARQZhAE8BVQBpAE8BVQBxAE8BVQB5AE8BVQCBAE8B
VQCJAE8BVQCRAE8BVQCZAE8BVQChAE8BVQCpAE8BVQCxAE8BrwC5AE8BGwAJAE8BGwAJAAkItAAJ
ABUIuwDBAE8BGwBJAE0IygAJAB4CGwDRAOEF1AA5AE8B2QAJACkCGwDZAIYIGwDJAIwI4ADZAJgI
5QAMAE8BGwDJAMMI7wDJAMkI9gDJANcI+wDJAN8IAQHJAOYICAHJAPEIDAHpAAMJEgHJAN8IGAFB
AAsJHgEZABcJ5QDJACAJJAHJACgJJAHJACAJRAERAE8BQAARAD4JUgERAEcJrwD5AE8BVQARAJwD
GwARAKMDGwARALIDWgAZAE8BGwAJAM8JWAEBAQgKXgEJAUEKZAERAVwKdQAZAU8BGwAhAbkKawEh
AdQKdAFRAE8BegE5AU8BhwFJAU8BGwAhAE8BGwAuABsADAIuAGMAMgIuAAsAmwEuABMA4wEuACMA
DAIuACsADAIuADMA4wEuADsAEgIuAEMADAIuAFsAKQJjAIMAxQDjAJsBxQBBAcMBxQAJA7sBjgEp
A7sBjgHBAM8AKQFJAYIBBAABAAUAFwAHABgACAAaAAAAvgNeAAAAxgNjAAAA1QNnAAAA2gNjAAAA
5gNnAAAA8QNjAAAAAwReAAAACwRjAAAAGgRnAAAAIwRjAAAAMwReAAAANwRjAAAAQgRnAAAASgRj
AAAAWQRnAAAAYgRjAAAAcgRnAAAAeQRjAAAAhwRnAAAAkARjAAAAoARnAAAAqwRjAAAAOgV6AAAA
UAWXAAAAyQWcAAAA7QWqAAEADQADAAEADgAFAAEADwAHAAEAEAAJAAEAEQALAAEAEgANAAEAEwAP
AAEAFAARAAEAFQATAAEAFgAVAAEAFwAXAAEAGAAZAAEAGQAbAAEAGgAdAAEAGwAfAAEAHAAhAAEA
HQAjAAEAHgAlAAEAHwAnAAEAIAApAAEAIQArAAEAIgAtAAIAJwAvAAIAKgAxAAIAKwAzAAEALAAz
AAIALQA1AOkABIAAAAEAAAD2GDpKAAAAAAAA5QcAAAsAAAAAAAAAAAAAAAEAsAAAAAAABAAAAAAA
AAAAAAAACgALAQAAAAAEAAAAAAAAAAAAAAAKABQBAAAAAAsAAAAAAAAAAAAAAAEAdwEAAAAACwAA
AAAAAAAAAAAAAQDNBAAAAAALAAAAAAAAAAAAAAABAGkJAAAAAAAAAAABAAAARwsAAAAAADxNb2R1
bGU+AFNDX0ZEQzgwQkUzRDVCRjRGRDI4OTI0RTQ3MTlDMUE5M0M3LmRsbABVc2VyQ29tcG9uZW50
AFNjcmlwdE1haW4AZXhwb3J0QnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMA
U0NfOTU4NmE1NzU3YzIzNGZlOTgyM2NhMjViMzk1YTc0OWYuUHJvcGVydGllcwBTZXR0aW5ncwBN
aWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVs
aW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABT
eXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBGaW5pc2hP
dXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcABQcmltZU91dHB1dABDcmVhdGVOZXdPdXRw
dXRSb3dzAFN5c3RlbS5JTwBTdHJlYW1SZWFkZXIAdGV4dFJlYWRlcgBleHBvcnRlZEFkZHJlc3NG
aWxlAEFjcXVpcmVDb25uZWN0aW9ucwBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldHRpbWUARGVj
aW1hbABzZXRfU0NFTkJJRABzZXRfU0NFTkJJRF9Jc051bGwAc2V0X0NJVFkAc2V0X0NJVFlfSXNO
dWxsAHNldF9NQU5VRkFDVE9SAHNldF9NQU5VRkFDVE9SX0lzTnVsbABzZXRfU0NMQ1JJRABzZXRf
U0NMQ1JJRF9Jc051bGwAc2V0X0NFTExOQU1FAHNldF9DRUxMTkFNRV9Jc051bGwAc2V0X0VDSQBz
ZXRfRUNJX0lzTnVsbABzZXRfS1FJSU5GTwBzZXRfS1FJSU5GT19Jc051bGwAc2V0X0tRSUlOREVY
AHNldF9LUUlJTkRFWF9Jc051bGwAc2V0X1JFQVNPTgBzZXRfUkVBU09OX0lzTnVsbABzZXRfTUVB
U1VSRVMAc2V0X01FQVNVUkVTX0lzTnVsbABzZXRfQ1JFQVRFVElNRQBzZXRfQ1JFQVRFVElNRV9J
c051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AEVuZE9mUm93c2V0AFNDRU5CSUQAU0NFTkJJRF9J
c051bGwAQ0lUWQBDSVRZX0lzTnVsbABNQU5VRkFDVE9SAE1BTlVGQUNUT1JfSXNOdWxsAFNDTENS
SUQAU0NMQ1JJRF9Jc051bGwAQ0VMTE5BTUUAQ0VMTE5BTUVfSXNOdWxsAEVDSQBFQ0lfSXNOdWxs
AEtRSUlORk8AS1FJSU5GT19Jc051bGwAS1FJSU5ERVgAS1FJSU5ERVhfSXNOdWxsAFJFQVNPTgBS
RUFTT05fSXNOdWxsAE1FQVNVUkVTAE1FQVNVUkVTX0lzTnVsbABDUkVBVEVUSU1FAENSRUFURVRJ
TUVfSXNOdWxsAFBhcmVudENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVX
cmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTQ29ubmVjdGlv
bk1hbmFnZXIxMDAAZ2V0X2Nvbm4AY29ubgBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE91dHB1dHMAT3V0cHV0SURzAEJ1
ZmZlcnMAT3V0cHV0TWFwAFRyYW5zYWN0aW9uAHRpbWUAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1
bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19GREM4MEJFM0Q1QkY0RkQyODkyNEU0NzE5QzFBOTNDNwBH
ZXRPdXRwdXRJRABHZXRDb2x1bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFjcXVpcmVDb25uZWN0aW9uAFN0cmluZwBTeXN0ZW0uVGV4dABFbmNvZGluZwBU
ZXh0UmVhZGVyAENsb3NlAFRvQ2hhckFycmF5AFJlYWRMaW5lAFN5c3RlbS5Db2xsZWN0aW9ucy5H
ZW5lcmljAExpc3RgMQBTcGxpdABJc051bGxPckVtcHR5AFJlcGxhY2UAQ29uY2F0AGdldF9MZW5n
dGgAU3Vic3RyaW5nAENvbnZlcnQAVG9JbnQ2NABvcF9JbXBsaWNpdABUb1N0cmluZwBJbmRleE9m
AExhc3RJbmRleE9mAEV4Y2VwdGlvbgBzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25F
eGNlcHRpb24ATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0
X0NvbXBvbmVudE1ldGFEYXRhAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAAZ2V0
X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAAR2V0
UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDXzk1ODZhNTc1N2MyMzRmZTk4MjNjYTI1
YjM5NWE3NDlmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAANZQB4AHAAbwByAHQA
AAMsAAADIgAAAQADfAAACyiN7l17fItXOgABD3WYYpdTYgBf9mX2XjoAAREBMHWYYpdTYgBf9mX2
XjoAAQ/GiZGYC059jx+Qh3M6AAERATDGiZGYC059jx+Qh3M6AAEPdZhil81UlF72ZfZeOgABDwEw
dZhil81UlF72ZfZeAQMwAAADdF4BAwhnAQPlZQEDLQABA/ZlAQM6AAADBlIBA9J5ARUgAEcATQBU
ACsAMAA4ADoAMAAwAAA94GXVbAZcIABJAHMATgB1AGwAbAAgAF5cJ2C+i25/Ok4gAEYAYQBsAHMA
ZQACMPeLOk7lixdSS408UAIwAQljAG8AbgBuAABxUwBDAF8AOQA1ADgANgBhADUANwA1ADcAYwAy
ADMANABmAGUAOQA4ADIAMwBjAGEAMgA1AGIAMwA5ADUAYQA3ADQAOQBmAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAAbOoIh6SCESrFyxWWXnqp0AAiJhF3NgIDM
kQi3elxWGTTgiQMGEhQDBhIYAyAAAQMGEhALIAQBCB0IHRIVEhkDBhIdAgYOBCABARwEIAEODgkg
AwESFR0IEhkFIAEBESEEIAEBAgQgAQEOAyAAAgQoABEhAygAAgMoAA4DBhIFBSABARIFBCAAEiUE
KAASJQMGEikDBhItBAAAEikEAAASLQUAAQESLQQIABIpBAgAEi0DBhIgBAAAEiAECAASIAQgAQEI
BgACCBIZDgUgAR0ICAMHAQgEAQAAAAQgARwcBAcBEiUEAAASaQYgAgEOEmkEIAAdAwMgAA4FFRJx
AQ4GIAEdDh0DBAABAg4FIAIODg4GAAMODg4OAyAACAUgAg4ICAUAAgoOCAUAAg4ODgUAAREhCgQg
AQgDGgcUDh0DHQMdDg4ICB0OCA4ODgoKDg4ICA4OBCABCA4IBwYICAgODg4FIAIBCBwFIAASgIEF
IAASgIUGIAESgIkOCAABEoCREYCVBSAAEoCZByACAQ4SgJkEBwESKQYgAQERgKEIAQACAAAAAAAD
AAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzk1ODZhNTc1N2MyMzRmZTk4MjNjYTI1YjM5NWE3NDlm
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEAAACgQQAAAAAAAAAAAAC+QQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
sEEAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQA6SvYYAAABADpK9hg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOQA1ADgA
NgBhADUANwA1ADcAYwAyADMANABmAGUAOQA4ADIAMwBjAGEAMgA1AGIAMwA5ADUAYQA3ADQAOQBm
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMwA5ADAALgAxADkA
MAAwADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ARgBEAEMAOAAw
AEIARQAzAEQANQBCAEYANABGAEQAMgA4ADkAMgA0AEUANAA3ADEAOQBDADEAQQA5ADMAQwA3AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADcAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8ARgBEAEMAOAAwAEIARQAzAEQANQBCAEYANABGAEQAMgA4ADkAMgA0AEUANAA3
ADEAOQBDADEAQQA5ADMAQwA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADkANQA4ADYAYQA1ADcANQA3AGMAMgAzADQAZgBlADkAOAAyADMAYwBhADIANQBi
ADMAOQA1AGEANwA0ADkAZgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAzADkAMAAuADEAOQAwADAAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADkAMAAuADEAOQAwADAAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADQMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="指定 Microsoft Visual Studio Tools for Applications 项目的名称。项目名称在包中必须是唯一的。"
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_fdc80be3d5bf4fd28924e4719c1a93c7</property>
                    <property
                      dataType="System.String"
                      description="指定脚本使用的编程语言。"
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="指定以逗号分隔的只读变量列表。"
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="指定以逗号分隔的读/写变量列表。"
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="该脚本中存在断点列表。"
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="执行校验和检查以便根据编译后的代码匹配组件元数据。"
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">fd35b447a40073e9c549d937a6e3540b</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach 循环容器\数据流任务\脚本组件.Connections[conn]"
                      connectionManagerID="Package.ConnectionManagers[平面文件连接管理器]"
                      connectionManagerRefId="Package.ConnectionManagers[平面文件连接管理器]"
                      name="conn" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export]"
                      hasSideEffects="true"
                      name="export">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[SC_ENBID]"
                          dataType="numeric"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[SC_ENBID]"
                          name="SC_ENBID"
                          precision="18" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CITY]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CITY]"
                          name="CITY" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[MANUFACTOR]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[MANUFACTOR]"
                          name="MANUFACTOR" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[SC_LCRID]"
                          dataType="numeric"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[SC_LCRID]"
                          name="SC_LCRID"
                          precision="18" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CELLNAME]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CELLNAME]"
                          name="CELLNAME" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[ECI]"
                          dataType="numeric"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[ECI]"
                          name="ECI"
                          precision="18" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[KQIINFO]"
                          dataType="wstr"
                          length="250"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[KQIINFO]"
                          name="KQIINFO" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[KQIINDEX]"
                          dataType="wstr"
                          length="300"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[KQIINDEX]"
                          name="KQIINDEX" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[REASON]"
                          dataType="wstr"
                          length="300"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[REASON]"
                          name="REASON" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[MEASURES]"
                          dataType="wstr"
                          length="600"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[MEASURES]"
                          name="MEASURES" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CREATETIME]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export].Columns[CREATETIME]"
                          name="CREATETIME" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach 循环容器\数据流任务.Paths[export]"
                  endId="Package\Foreach 循环容器\数据流任务\数据转换.Inputs[数据转换输入]"
                  name="export"
                  startId="Package\Foreach 循环容器\数据流任务\脚本组件.Outputs[export]" />
                <path
                  refId="Package\Foreach 循环容器\数据流任务.Paths[数据转换输出]"
                  endId="Package\Foreach 循环容器\数据流任务\查找.Inputs[查找输入]"
                  name="数据转换输出"
                  startId="Package\Foreach 循环容器\数据流任务\数据转换.Outputs[数据转换输出]" />
                <path
                  refId="Package\Foreach 循环容器\数据流任务.Paths[查找无匹配输出]"
                  endId="Package\Foreach 循环容器\数据流任务\OLE DB 目标.Inputs[OLE DB 目标输入]"
                  name="查找无匹配输出"
                  startId="Package\Foreach 循环容器\数据流任务\查找.Outputs[查找无匹配输出]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 1]"
          DTS:CreationName=""
          DTS:DTSID="{562CEE90-FF67-43C5-8311-33B31D834DEC}"
          DTS:From="Package\Foreach 循环容器\数据流任务"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 1"
          DTS:To="Package\Foreach 循环容器\保存入库数据文件" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{9EB66461-5CD6-4C48-AF96-5F31EDBE00CC}"
          DTS:ObjectName="{9EB66461-5CD6-4C48-AF96-5F31EDBE00CC}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::KQIloadFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\执行 SQL 任务"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="执行 SQL 任务"
      DTS:DTSID="{E0700D85-C756-4CB5-9382-CA00D3600D32}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="执行 SQL 任务"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF1B0189-C787-45D6-ABB7-2CA7A436C369}"
          SQLTask:SqlStatementSource="Insert into Data_Kqiinfo&#xA;select a.* from DATA_KQI3DAY a&#xA;left join (&#xA;&#x9;select eci from (&#xA;&#x9;&#x9;select distinct eci,trunc(createtime) createtime from DATA_KQI3DAY where createtime&gt;=trunc(sysdate-7) and createtime&lt;trunc(sysdate-1) &#xA;&#x9;) a group by eci having count(0)&gt;1&#xA;) b on a.eci=b.eci&#xA;where trunc(a.createtime)=trunc(sysdate-1) and b.eci is not null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\脚本任务"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="脚本任务"
      DTS:DTSID="{DDBC23AC-87C6-46E7-BB45-8BE5218812FB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="脚本任务"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_933be3875b22418cb73facb47878df1c"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::KQILocFile,User::KQIRemote">
          <ProjectItem
            Name="ST_933be3875b22418cb73facb47878df1c.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{76D6FCBF-CAEB-44D4-B0ED-93F9400251FF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_933be3875b22418cb73facb47878df1c</RootNamespace>
    <AssemblyName>ST_933be3875b22418cb73facb47878df1c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_933be3875b22418cb73facb47878df1c.Properties.Settings.get_Default():ST_933be3875b22418cb73facb47878df1c.Properties.Sett" +
    "ings")]

namespace ST_933be3875b22418cb73facb47878df1c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_933be3875b22418cb73facb47878df1c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try {
                //User::KQILocFile,User::KQIRemote
                String date = DateTime.Now.AddDays(-1).ToString("yyyyMMdd");
                String date2 = DateTime.Now.AddDays(-1).ToString("yyyy-MMdd");
                String remotepath = Dts.Variables["User::KQIRemote"].Value.ToString();
                String locpath = Dts.Variables["User::KQILocFile"].Value.ToString();
                DirectoryInfo theFolder = new DirectoryInfo(remotepath);
                FileInfo[] fileInfo = theFolder.GetFiles();
                foreach (FileInfo NextFile in fileInfo)
                {
                    String filename = NextFile.Name;
                    if ((filename.Contains(date) && filename.Contains("csv")) || (filename.Contains(date2) && filename.Contains("csv")))
                    {
                        File.Copy(remotepath + filename, locpath + filename);
                    }
                }
            }
            catch { }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_933be3875b22418cb73facb47878df1c</msb:CodeName>
		<msb:DisplayName>ST_933be3875b22418cb73facb47878df1c</msb:DisplayName>
		<msb:ProjectId>{556A2E28-AC1F-4507-93AF-791E86D84028}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_933be3875b22418cb73facb47878df1c.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_933be3875b22418cb73facb47878df1c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_933be3875b22418cb73facb47878df1c")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_933be3875b22418cb73facb47878df1c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_933be3875b22418cb73facb47878df1c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_933be3875b22418cb73facb47878df1c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_933be3875b22418cb73facb47878df1c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_933be3875b22418cb73facb47878df1c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_933be3875b22418cb73facb47878df1c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFabZVkAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAbjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABwwAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
MAAAAAAAAEgAAAACAAUAwCIAAFwNAAABAAAAAAAAAAgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwAbAQAAAgAAESgWAAAKEwgSCCMAAAAAAADwvygXAAAKEwkSCXJz
AABwKBgAAAoKKBYAAAoTChIKIwAAAAAAAPC/KBcAAAoTCxILcoUAAHAoGAAACgsCKBkAAApvGgAA
CnKZAABwbxsAAApvHAAACm8dAAAKDAIoGQAACm8aAAAKcrkAAHBvGwAACm8cAAAKbx0AAAoNCHMe
AAAKEwQRBG8fAAAKEwURBRMMFhMNK1sRDBENmhMGEQZvIAAAChMHEQcGbyEAAAosDhEHctsAAHBv
IQAACi0YEQcHbyEAAAosIxEHctsAAHBvIQAACiwVCBEHKCIAAAoJEQcoIgAACigjAAAKEQ0XWBMN
EQ0RDI5pMp3eAybeAAIoGQAAChZvJAAACioAQRwAAAAAAAAAAAAACwEAAAsBAAADAAAAAQAAAR4C
KCUAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBt
c2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
PWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAA
AAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABgE
AAAjfgAAhAQAACgGAAAjU3RyaW5ncwAAAACsCgAA5AAAACNVUwCQCwAAEAAAACNHVUlEAAAAoAsA
ALwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAjAAAABQAAAAYAAAAJAAAA
AQAAACUAAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAA
AAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYA
tgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYA4APN
AwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQUAQYAxAS6AA4A5gQUARIA
PwUfBRIAVwUfBQYAfQVzBQYAiwVzBQYAnQVzBQYAtQW6AAYAzAVzBQAAAAABAAAAAAABAAEAAAAQ
ADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgARAH8B
EwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEf
AAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsA
AgCnIAAAAACRGJsEiQACALwgAAAAAIYAGgIbAAIAACIAAAAAhhi8ARsAAgAAAAEANwI5ALwBWABB
ALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACBALwBWACJALwB
XQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8EaQApALwBbgC5ALwBegDJALwBGwARALwBGwDR
ALwBGwDZAM0EjQDZANUEkgDZAN0EmAAZAPgEnQDhAEkFogDpAGAFpwDxAGkFrQAJAN0EsQD5ALwB
WAD5AJQFtQAJAawFsQARAbwFvAARAcUFwQAZAdEFxwDhANYFXQAZALwBGwAIABQATgAIABgAUwAp
AJMAgAAuABsAXAEuACMAXAEuAGMAmgEuAAsA6wAuABMAMwEuADMAMwEuACsAYgEuADsAcQEuAEMA
XAEuAFsAkQFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AM0AAgABAAMAAwAAAG8BLwAAAO4BNAAA
ABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAAIZq1IAAAAAAAB/AAAABAAAAAAA
AAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAA
AAAAAAAAAAAACgAABQAAAAAAAAAAAQAAAOUFAAAFAAQAAAAAPE1vZHVsZT4AU1RfOTMzYmUzODc1
YjIyNDE4Y2I3M2ZhY2I0Nzg3OGRmMWMuZGxsAFJlc291cmNlcwBTVF85MzNiZTM4NzViMjI0MThj
YjczZmFjYjQ3ODc4ZGYxYy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfOTMzYmUz
ODc1YjIyNDE4Y2I3M2ZhY2I0Nzg3OGRmMWMAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0A
T2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJj
ZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1
cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1
bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0
ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNz
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AERhdGVUaW1lAGdldF9Ob3cAQWRkRGF5cwBUb1N0cmluZwBTY3JpcHRPYmplY3RNb2RlbABnZXRf
RHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9W
YWx1ZQBTeXN0ZW0uSU8ARGlyZWN0b3J5SW5mbwBGaWxlSW5mbwBHZXRGaWxlcwBGaWxlU3lzdGVt
SW5mbwBnZXRfTmFtZQBTdHJpbmcAQ29udGFpbnMAQ29uY2F0AEZpbGUAQ29weQBzZXRfVGFza1Jl
c3VsdABTVF85MzNiZTM4NzViMjI0MThjYjczZmFjYjQ3ODc4ZGYxYy5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwA5ADMAMwBiAGUAMwA4ADcANQBiADIAMgA0ADEAOABjAGIA
NwAzAGYAYQBjAGIANAA3ADgANwA4AGQAZgAxAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAABF5AHkAeQB5AE0ATQBkAGQAABN5AHkAeQB5AC0ATQBNAGQAZAABH1UA
cwBlAHIAOgA6AEsAUQBJAFIAZQBtAG8AdABlAAAhVQBzAGUAcgA6ADoASwBRAEkATABvAGMARgBp
AGwAZQAAB2MAcwB2AAAAlVHPi1kqfUyvg/3N9JVFTQAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYS
GQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAA
BAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAA
AQQAABFtBSABEW0NBCABDg4EIAAScQQgABJ1BSABEnkcAyAAHAMgAA4GIAAdEoCBBCABAg4FAAIO
Dg4FAAIBDg4dBw4ODg4OEn0dEoCBEoCBDhFtEW0RbRFtHRKAgQhHAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAj
U1RfOTMzYmUzODc1YjIyNDE4Y2I3M2ZhY2I0Nzg3OGRmMWMAAAUBAAAAAA4BAAlNaWNyb3NvZnQA
AB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQgMjAxNwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQAAAEQwAAAAAAAAAAAAAF4wAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABQMAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA+AMAAAAAAAAAAAAA+AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAKtSAhkAAAEAq1ICGT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADQDAAABADAAMAAw
ADAAMAA0AGIAMAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMA
bwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AOQAz
ADMAYgBlADMAOAA3ADUAYgAyADIANAAxADgAYwBiADcAMwBmAGEAYwBiADQANwA4ADcAOABkAGYA
MQBjAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANAAwADIALgAy
ADEAMQA2ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AOQAzADMA
YgBlADMAOAA3ADUAYgAyADIANAAxADgAYwBiADcAMwBmAGEAYwBiADQANwA4ADcAOABkAGYAMQBj
AC4AZABsAGwAAABcABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAxADcAAAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA5ADMAMwBiAGUAMwA4ADcANQBiADIA
MgA0ADEAOABjAGIANwAzAGYAYQBjAGIANAA3ADgANwA4AGQAZgAxAGMALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOQAzADMAYgBlADMAOAA3ADUAYgAyADIA
NAAxADgAYwBiADcAMwBmAGEAYwBiADQANwA4ADcAOABkAGYAMQBjAAAARAAPAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADQAMAAyAC4AMgAxADEANgAzAAAAAABIAA8A
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADQAMAAyAC4AMgAx
ADEANgAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[约束]"
      DTS:CreationName=""
      DTS:DTSID="{6778FAAB-C3CA-466B-B313-B5BF0B4BAD6B}"
      DTS:From="Package\脚本任务"
      DTS:LogicalAnd="True"
      DTS:ObjectName="约束"
      DTS:To="Package\Foreach 循环容器" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[约束 1]"
      DTS:CreationName=""
      DTS:DTSID="{FE19DAB8-84BB-461D-B3F6-FA37986E90A4}"
      DTS:From="Package\Foreach 循环容器"
      DTS:LogicalAnd="True"
      DTS:ObjectName="约束 1"
      DTS:To="Package\执行 SQL 任务" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--此 CDATA 部分包含包的布局信息。该部分包括(x,y)坐标、宽度和高度之类的信息。-->
<!--如果您手动编辑此部分并且出错，则可以删除此部分。 -->
<!--该包仍将能够正常加载，但以前的布局信息将丢失，并且设计器将自动在设计图面上重新排列这些元素。-->
<Objects
  Version="sql11">
  <!--下面的每个节点都将包含不会影响运行时行为的属性。-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="177,42"
          Id="Package\Foreach 循环容器\保存入库数据文件"
          TopLeft="37.9999878803894,163.28570052799" />
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach 循环容器\数据流任务"
          TopLeft="56.6333291204441,38.5079320786012" />
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 1]"
          TopLeft="126.816658500417,80.5079320786012">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82.7777684493887"
              Start="0,0"
              End="0,75.2777684493887">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,75.2777684493887" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="261,255"
          Size="261,298"
          Id="Package\Foreach 循环容器"
          TopLeft="205.866663111083,83.4111084006031" />
        <NodeLayout
          Size="129,42"
          Id="Package\脚本任务"
          TopLeft="10.666666203075,208.857132135606" />
        <NodeLayout
          Size="159,42"
          Id="Package\执行 SQL 任务"
          TopLeft="536.49997864167,170.785705509235" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[约束]"
          TopLeft="139.666666203075,231.134120268105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66.1999969080083,0"
              Start="0,0"
              End="58.6999969080083,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.6999969080083,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[约束 1]"
          TopLeft="466.866663111083,232.411108400603">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69.6333155305865,-40.6254028913682"
              Start="0,0"
              End="62.1333155305865,-40.6254028913682">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.8166577652933,0" />
                  <mssgle:CubicBezierSegment
                    Point1="30.8166577652933,0"
                    Point2="34.8166577652933,0"
                    Point3="34.8166577652933,-4" />
                  <mssgle:LineSegment
                    End="34.8166577652933,-36.6254028913682" />
                  <mssgle:CubicBezierSegment
                    Point1="34.8166577652933,-36.6254028913682"
                    Point2="34.8166577652933,-40.6254028913682"
                    Point3="38.8166577652933,-40.6254028913682" />
                  <mssgle:LineSegment
                    End="62.1333155305865,-40.6254028913682" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach 循环容器\数据流任务">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="105,42"
          Id="Package\Foreach 循环容器\数据流任务\查找"
          TopLeft="277.333322273361,183.785704845069" />
        <NodeLayout
          Size="128,42"
          Id="Package\Foreach 循环容器\数据流任务\脚本组件"
          TopLeft="29.8333321081268,33.357141101847" />
        <NodeLayout
          Size="129,42"
          Id="Package\Foreach 循环容器\数据流任务\数据转换"
          TopLeft="33.9999986092251,159.642848935663" />
        <NodeLayout
          Size="147,42"
          Id="Package\Foreach 循环容器\数据流任务\OLE DB 目标"
          TopLeft="417.866656164659,316.626973822181" />
        <EdgeLayout
          Id="Package\Foreach 循环容器\数据流任务.Paths[查找无匹配输出]"
          TopLeft="329.833322273361,225.785704845069">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="161.533333891299,90.8412689771121"
              Start="0,0"
              End="161.533333891299,83.3412689771121">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.4206344885561" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.4206344885561"
                    Point2="0,45.4206344885561"
                    Point3="4,45.4206344885561" />
                  <mssgle:LineSegment
                    End="157.533333891299,45.4206344885561" />
                  <mssgle:CubicBezierSegment
                    Point1="157.533333891299,45.4206344885561"
                    Point2="161.533333891299,45.4206344885561"
                    Point3="161.533333891299,49.4206344885561" />
                  <mssgle:LineSegment
                    End="161.533333891299,83.3412689771121" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="45.2940106956495,50.4206344885561,70.9453125,11.70703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器\数据流任务.Paths[数据转换输出]"
          TopLeft="162.999998609225,180.642848935663">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.333323664136,24.1428559094058"
              Start="0,0"
              End="106.833323664136,24.1428559094058">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.1666618320678,0" />
                  <mssgle:CubicBezierSegment
                    Point1="53.1666618320678,0"
                    Point2="57.1666618320678,0"
                    Point3="57.1666618320678,4" />
                  <mssgle:LineSegment
                    End="57.1666618320678,20.1428559094058" />
                  <mssgle:CubicBezierSegment
                    Point1="57.1666618320678,20.1428559094058"
                    Point2="57.1666618320678,24.1428559094058"
                    Point3="61.1666618320678,24.1428559094058" />
                  <mssgle:LineSegment
                    End="106.833323664136,24.1428559094058" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器\数据流任务.Paths[export]"
          TopLeft="96.1666653586759,75.357141101847">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84.285707833816"
              Start="0,0"
              End="0,76.785707833816">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.785707833816" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach 循环容器\数据流任务\OLE DB 目标">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>