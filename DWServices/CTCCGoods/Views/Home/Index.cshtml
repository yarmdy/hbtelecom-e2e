@{
    ViewBag.Title = "首页";
    Dictionary<string, object>[] cus = ViewBag.cus;
    Dictionary<string, object>[] rus = ViewBag.rus;
    Dictionary<int, string> oss = ViewBag.oss;
    Dictionary<int, string> tos = ViewBag.tos;
}
@section script{
    <script>
        window.orderstatus = {
        @foreach (CTCCGoods.Controllers.orderstatus e in Enum.GetValues(typeof(CTCCGoods.Controllers.orderstatus)))
        {
            @:"@((int)e)": "@(CTCCGoods.Controllers.O2.GED(e))",
                    }
        };
        window.verifystatus = {
        @foreach (CTCCGoods.Controllers.verifystatus e in Enum.GetValues(typeof(CTCCGoods.Controllers.verifystatus)))
        {
            @:"@((int)e)": "@(CTCCGoods.Controllers.O2.GED(e))",
                    }
        };
        window.torderstatus = {
        @foreach (CTCCGoods.Controllers.torderstatus e in Enum.GetValues(typeof(CTCCGoods.Controllers.torderstatus)))
        {
            @:"@((int)e)": "@(CTCCGoods.Controllers.O2.GED(e))",
                    }
        };
        function orderstatusfmt(value, row, index) {
            if (row['type']=="需求单") {
                return orderstatus[value];
            } else {
                return torderstatus[value];
            }

        }
        function orderstatusfmt2(value, row, index) {
            if (row['type'] == "需求单") {
                return orderstatus[value+1];
            } else {
                return torderstatus[value+1];
            }
        }
        function verifystatusfmt(value) {
            return verifystatus[value];
        }
        function ordercode(value, row, index) {
            if (row['type']=="需求单") {
                return "<a href=\"/order/byid/" + row.id + "\"  class=\"ordercode\" oidx=\"" + index + "\">" + value + "</a>";
            } else {
                return "<a href=\"/trans/byid/" + row.id + "\"  class=\"ordercode\" oidx=\"" + index + "\">" + value + "</a>";
            }
        }
        $(function () {

            //1.初始化Table
            var oTable = new TableInit();
            oTable.Init();

            //2.初始化Button的点击事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();

            var oTable2 = new TableInit2();
            oTable2.Init();

            //2.初始化Button的点击事件
            var oButtonInit2 = new ButtonInit2();
            oButtonInit2.Init();
        });

        var TableInit = function () {
            var oTableInit = new Object();
            //初始化Table
            oTableInit.Init = function () {
                $('#table1').bootstrapTable({
                    url: '/home/ftask',         //请求后台的URL（*）
                    method: 'post',                      //请求方式（*）
                    toolbar: '#tbaction',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true,                   //是否显示分页（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 5,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    strictSearch: false,
                    showColumns: false,                  //是否显示所有的列
                    showRefresh: false,                  //是否显示刷新按钮
                    minimumCountColumns: 2,             //最少允许的列数
                    clickToSelect: true,                //是否启用点击选中行
                    height: 327,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "id",                     //每一行的唯一标识，一般为主键列
                    showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    columns: [{
                        field: 'id',
                        title: '需求单id',
                        visible: false
                    }, {
                        field: 'type',
                        title: '单据',
                        //formatter: ordercode
                    }, {
                        field: 'code',
                        title: '单号',
                        formatter: ordercode
                        }, {
                            field: 'room',
                            title: '类型',
                        },{
                        field: 'createuname',
                        title: '发起人',
                    }, {
                        field: 'receiveuname',
                        title: '厂家',
                    }, {
                        field: 'createtime',
                        title: '时间',
                    }, {
                        field: 'uname',
                        title: '上一操作人',
                    }, {
                        field: 'verifyno',
                        title: '状态到达',
                        formatter: orderstatusfmt
                    }, {
                        field: 'agree',
                        title: '状态',
                        formatter: verifystatusfmt
                    }, {
                        field: 'des',
                        title: '备注意见',
                        visible: false
                    }, {
                        field: 'status',
                        title: '待办',
                        formatter: orderstatusfmt2
                    }],
                });
            };

            //得到查询的参数
            oTableInit.queryParams = function (params) {
                var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    limit: params.limit,   //页面大小
                    offset: params.offset,  //页码
                };
                return temp;
            };
            return oTableInit;
        };


        $('#search').click(function () {
            var type = $('#ordertype').val();
            if (type == -1) {
                
                var create = $('#ordercreateuser').val();
                var chang = $('#orderreceiveuser').val();
                var queryObj = {};
                if (create != -1) {
                    queryObj.createuname = create;
                }
                if (chang != -1) {
                    queryObj.receiveuname = chang;
                }
                $('#table2').bootstrapTable('filterBy', queryObj)
            }
            if (type == 1) {
                var create = $('#ordercreateuser').val();
                var chang = $('#orderreceiveuser').val();
                var status = $('#orderstatus').val();
                var status2 = $('#orderstatus2').val();
                var queryObj = {'type':'需求单'};
                if (create != -1) {
                    queryObj.createuname = create;
                }
                if (chang != -1) {
                    queryObj.receiveuname = chang;
                }
                if (status != -10) {
                    queryObj.verifyno = parseInt(status);
                }
                if (status2 != -10) {
                    queryObj.status = parseInt(status2) - 1;
                }
                $('#table2').bootstrapTable('filterBy', queryObj)
            }
            if (type == 2) {
                var create = $('#ordercreateuser').val();
                var chang = $('#orderreceiveuser').val();
                var status = $('#orderstatus').val();
                var status2 = $('#orderstatus2').val();
                var queryObj = {'type':'调货单'};
                if (create != -1) {
                    queryObj.createuname = create;
                }
                if (chang != -1) {
                    queryObj.receiveuname = chang;
                }
                if (status != -10) {
                    queryObj.verifyno = parseInt(status);
                }
                if (status2 != -10) {
                    queryObj.status = parseInt(status2) - 1;
                }
                $('#table2').bootstrapTable('filterBy', queryObj)
            }
        })

        $('#chongzhi').click(function () {
            $('#table2').bootstrapTable('filterBy', {})
            $('#ordertype').val(-1);
            $('#ordercreateuser').val(-1);
            $('#orderreceiveuser').val(-1);
            $('#orderstatus').val(-10).attr('disabled', 'disabled');
            $('#orderstatus2').val(-10).attr('disabled', 'disabled');
        })


        var TableInit2 = function () {
            var oTableInit = new Object();
            //初始化Table
            oTableInit.Init = function () {
                $('#table2').bootstrapTable({
                    url: '/home/fflow',         //请求后台的URL（*）
                    method: 'post',                      //请求方式（*）
                    toolbar: '#tbaction2',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true,                   //是否显示分页（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 5,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    strictSearch: false,
                    showColumns: false,                  //是否显示所有的列
                    showRefresh: false,                  //是否显示刷新按钮
                    minimumCountColumns: 2,             //最少允许的列数
                    clickToSelect: true,                //是否启用点击选中行
                    height: 361,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "id",                     //每一行的唯一标识，一般为主键列
                    showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    columns: [{
                        field: 'id',
                        title: '需求单id',
                        visible: false
                    }, {
                        field: 'type',
                        title: '单据',
                        //formatter: ordercode
                    }, {
                        field: 'code',
                        title: '单号',
                        formatter: ordercode
                        }, {
                            field: 'room',
                            title: '类型',
                        },{
                        field: 'createuname',
                            title: '发起人',
                    }, {
                        field: 'receiveuname',
                        title: '厂家',
                    }, {
                        field: 'createtime',
                        title: '时间',
                    }, {
                        field: 'uname',
                        title: '上一操作人',
                    }, {
                        field: 'verifyno',
                        title: '状态到达',
                        formatter: orderstatusfmt
                    }, {
                        field: 'agree',
                        title: '状态',
                        formatter: verifystatusfmt
                    }, {
                        field: 'des',
                        title: '备注意见',
                        visible: false
                    }, {
                        field: 'status',
                        title: '待办',
                        formatter: orderstatusfmt2
                    }],
                });
            };

            //得到查询的参数
            oTableInit.queryParams = function (params) {
                var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    limit: params.limit,   //页面大小
                    offset: params.offset,  //页码
                };
                return temp;
            };
            return oTableInit;
        };


        var ButtonInit = function () {
            var oInit = new Object();
            var postdata = {};

            oInit.Init = function () {
                //初始化页面上面的按钮事件
            };

            return oInit;
        };
        var ButtonInit2 = function () {
            var oInit = new Object();
            var postdata = {};

            oInit.Init = function () {
                //初始化页面上面的按钮事件
            };

            return oInit;
        };
        $('#ordertype').change(function () {
            var type = $('#ordertype').val();
            if (type == -1) {
                $('#orderstatus').val(-10).attr('disabled', 'disabled')
                $('#orderstatus2').val(-10).attr('disabled', 'disabled')
                return
            }
            if (type == 1) {
                var $t = ''
                @foreach(var s in oss)
                {
                    <text>$t += '<option value="@(s.Key)">@(s.Value)</option>'</text>
                }

                $('#orderstatus').empty().append('<option value="-10">全部状态</option>').removeAttr('disabled').append($t)
                $('#orderstatus2').empty().append('<option value="-10">全部待办</option>').removeAttr('disabled').append($t)
            }
            if (type == 2) {
                var $t = ''
                @foreach(var s in tos)
                {
                    <text>$t += '<option value="@(s.Key)">@(s.Value)</option>'</text>
                }
                $('#orderstatus').empty().append('<option value="-10">全部状态</option>').removeAttr('disabled').append($t)
                $('#orderstatus2').empty().append('<option value="-10">全部待办</option>').removeAttr('disabled').append($t)
            }
        })

        $('table').on('mouseenter', 'tbody tr', function (e) {
            var orderid = $(this).attr('data-uniqueid')
            var isOrder = $(this).text().includes('需求单')
            var url = isOrder ? '/order/getinfobyid?orderid=' + orderid : '/trans/getinfobyid?torderid=' + orderid
            $.post(url, function (result) {
                if (result.ok) {
                    var data = result.data;
                    var $div = $('<div class="floatwindow"></div>');
                    for (var i = 0; i < data.length; i++) {
                        var $p = $('<p style="margin:0;padding:0;"><span style="color:#337ab7;">' + data[i].name + '</span>: ' + data[i].gnum + '</p>')
                        $div.append($p);
                    }
                    var x = e.clientX;
                    var y = e.clientY;
                    $div.attr('style', 'box-shadow: 2px 2px 2px 0 rgba(0,0,0,0.3);display:none;border-radius: 10px;border:1px solid #ccc;position:absolute;background-color:#fff;padding: 10px;top:' + (y + 5) + 'px;left:' + (x + 5) + 'px;');
                    $('body').append($div);
                    $div.fadeIn(500);
                }
            })
        })

        $('table').on('mouseleave', 'tbody tr', function () {
            $('.floatwindow').each(function (index, item) {
                $(item).fadeOut(500).remove();
            });
        })
    </script>
}
<div class="container">
    <b id="tbaction">我的任务</b>
    <table id="table1"></table>
    <div id="tbaction2">
        <b id="">我的通知</b>
        <form class="form-inline">
            <select class="form-control" id="ordertype">
                <option value="-1">全部类型</option>
                <option value="1">需求单</option>i
                <option value="2">调货单</option>
            </select>
            <select class="form-control" id="ordercreateuser">
                <option value="-1">全部创建人</option>
                @foreach (var cu in cus)
                {
                    <option value="@(cu["name"])">@(cu["name"])</option>
                }
            </select>
            <select class="form-control" id="orderreceiveuser">
                <option value="-1">全部厂家</option>
                @foreach (var ru in rus)
                {
                    <option value="@(ru["name"])">@(ru["name"])</option>
                }
            </select>
            <select class="form-control" id="orderstatus" disabled>
                <option value="-10">全部状态</option>
            </select>
            <select class="form-control" id="orderstatus2" disabled>
                <option value="-10">全部待办</option>
            </select>
            <button class="btn btn-info" type="button" id="search"><span class="glyphicon glyphicon-search" aria-hidden="true"></span>查询</button>
            <button class="btn btn-info" type="button" id="chongzhi">重置</button>
        </form>
    </div>
    <table id="table2"></table>
</div>