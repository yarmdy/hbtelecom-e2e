@{
    ViewBag.Title = "超忙计算";
}
@section style {
    <style>
        #record:hover {
            cursor: pointer;
            color: deepskyblue;
        }

        #recordInfo {
            display: none;
        }
        .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
            white-space:nowrap
        }
    </style>
}
@section script {
    <script src="/js/multiselect.js"></script>
    <script>
        function getPostData() {
            var info = $("#txtselect").multiselect("info");
            info.cm = $("#btncm").find("span").hasClass("glyphicon-ok-circle");
            info.cmts = $("#txtcmdays").val();
            for (var i = 0; i < info.list.length; i++) {
                info["list["+i+"]"]=info.list[i];
            }
            return info;
        }
        $(function () {
            $("#btncm").on("click", function () {
                var $this = $(this);
                if ($this.hasClass("active")) {
                    $this.removeClass("active").find("span").removeClass("glyphicon-ok-circle").addClass("glyphicon-remove-circle");
                    $("#txtcmdays").addClass("hidden");
                } else {
                    $this.addClass("active").find("span").removeClass("glyphicon-remove-circle").addClass("glyphicon-ok-circle");
                    $("#txtcmdays").removeClass("hidden");
                }
            });
            var filesdata = [];
            @if (ViewBag.history.Count > 0)
            {
                foreach (Dictionary<string, string> item in ViewBag.history)
                {
                    @:filesdata.push({ id: "@(item["text"])", name: "@(item["text"])", year: "@(item["text"].Substring(0, 4))", month: "@(item["text"].Substring(4, 2))",selected:@(item["sel"]=="1"?"true":"false") });
                }
            }
            $("#txtselect").on("selected", function () {
                var list = $("#txtselect").multiselect("selected");
                $(this).val("选择日期：已选择"+list.length+"天");
            });
            $("#txtselect").multiselect("init", {data:filesdata,start:"@(ViewBag.start)",end:"@(ViewBag.end)"});
            $("#btnselect").on("click", function () {
                $("#txtselect").multiselect("edit");
            });
            $("#btnshow").on("click", function () {
                $("#txtselect").multiselect("show");
            });
            $("#btncomp").on("click", function () {
                $.post("/netcap/csbusy", getPostData(), function (data) {
                    alert(data.msg);
                });
            });
            $("#btn_export").on("click", function () {
                var val = "@(ViewBag.thisfile.Replace("\\","\\\\"))";
                if (val) {
                    $("#btn_export").attr("href", "/netcap/export?index=2&file=" + val);
                }
            })
            $("#btnsearch").on("click",function(){
                $('#table1').bootstrapTable("selectPage", 1);
            });
        });
        var baseCols = [{
                field: 'no',
                title: '序号',
                }];
        var TableInit = function () {
            var oTableInit = new Object();
            //初始化Table
            oTableInit.Init = function () {
                $('#table1').bootstrapTable({
                    url: "/netcap/file",
                    method: "GET",
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true,                   //是否显示分页（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    strictSearch: false,
                    showColumns: true,                  //是否显示所有的列
                    showRefresh: true,                  //是否显示刷新按钮
                    minimumCountColumns: 2,             //最少允许的列数
                    clickToSelect: true,                //是否启用点击选中行
                    uniqueId: "no",                     //每一行的唯一标识，一般为主键列
                    showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    columns: baseCols,
                    onLoadSuccess: function (data) {
                        if (data.rows && data.rows.length > 0) {
                            var same = true;
                            if (same) {
                                var ccount = 0;
                                for (var col in data.rows[0]) {
                                    ccount++;
                                    if (!same) continue;
                                    var has = false;
                                    for (var col2 in this.columns[0]) {
                                        if (col == this.columns[0][col2].field) {
                                            has = true;
                                            break;
                                        }
                                    }
                                    if (!has) {
                                        same = false;
                                    }
                                }
                            }
                            same = same && (ccount == this.columns[0].length);
                            if (!same) {
                                var newcols = [];
                                for (var col in data.rows[0]) {
                                    newcols.push({
                                        field: col,
                                        title: col,
                                    });
                                }
                                $('#table1').bootstrapTable("refreshOptions", {
                                    columns:newcols
                                });
                            }
                            
                        }
                    }
                })
            };

            //得到查询的参数
            oTableInit.queryParams = function (params) {
                var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    limit: params.limit,   //页面大小
                    offset: params.offset,  //页码
                    type: "@(ViewBag.thisfile.Replace("\\","\\\\"))",
                    d: "sbusycomp",
                    
                    city: $("#selcity").val(),
                    chang: $("#selchang").val(),
                    n:$("#txtname").val(),

                    b:$("#txtbid").val(),
                    r:$("#txtcid").val(),
                };
                return temp;
            };
            return oTableInit;
        };

        var oTable = new TableInit();
        oTable.Init();

    </script>

}

<div class="container">
    <div class="form-inline" id="toolbar2">
        <a id="btn_export" class="btn btn-primary" href="###">
            <span class="glyphicon glyphicon-export" aria-hidden="true"></span>导出
        </a>
        <div class="input-group">
            <input type="text" readonly class="form-control" value="选择日期：已选择0天" id="txtselect" />
            <div class="input-group-btn">
                <button type="button" class="btn btn-default" id="btnshow"><span class="caret"></span></button>
                <button type="button" class="btn btn-info" id="btnselect"><span class="glyphicon glyphicon-search"></span> 选择</button>
            </div>
        </div>
        <div class="input-group">
            <div class="input-group-btn">
                <button type="button" class="btn btn-primary @(ViewBag.cm?"active":"")" id="btncm"><span class="glyphicon @(ViewBag.cm?"glyphicon-ok-circle":"glyphicon-remove-circle")"></span> 是否计算超忙</button>
            </div>
            <input type="number" class="form-control @(ViewBag.cm?"":"hidden")" value="@(ViewBag.cmts)" placeholder="超忙天数设置" id="txtcmdays"  />
        </div>
        <button type="button" class="btn btn-success" id="btncomp"><span class="glyphicon glyphicon-list-alt"></span> 计算</button>
    </div>
    <div class="form-inline" id="toolbar">
        <label>条件：</label>
        <select class="form-control" id="selcity">
            <option value="">全部地市</option>
            @foreach (var i in CTCCGoods.Controllers.ctasksHandle.constcitys) { 
                <option value="@(i)">@(i)</option>
            }
        </select>
        <input type="text" class="form-control" placeholder="基站ID" id="txtbid" />
        <input type="text" class="form-control" placeholder="小区ID" id="txtcid" />
        <input type="text" class="form-control" placeholder="小区名称" id="txtname" />
        <select class="form-control" id="selchang">
            <option value="">全部厂家</option>
            @foreach (var i in CTCCGoods.Controllers.ctasksHandle.constchangs) { 
                <option value="@(i)">@(i)</option>
            }
        </select>
        <button type="button" class="btn btn-info" id="btnsearch"><span class="glyphicon glyphicon-search"></span> 查询</button>
    </div>
    <table id="table1"></table>
</div>
