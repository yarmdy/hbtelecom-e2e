@{
    ViewBag.Title = "Files";
}

@section style {
    <style>
        .right {
            float: right;
        }

        .clear::after {
            content: "";
            display: block;
            height: 0;
            width: 0;
            clear: both;
        }
        .children {
            display: none;
            margin-bottom: 10px;
        }
        ul {
            list-style: none;
        }
        li.files {
            font-size: 18px;
            margin: 10px 0;
        }
        li.dir {
            list-style-image: url('/images/dir.png');
        }
        li.dir>a {
            color: #008573;
        }
        li.file {
            list-style-image: url('/images/file.png');
        }
        .self-btn {
            width: 40px;
            height: 18px;
            padding: 0;
            margin-right: 20px;
        }
        .self-btn i {
            font-size: 12px;
            height: 18px;
            transform: scale(.8) translateY(-2px);
        }
        .pop {
            display: none;
            position:absolute;
            width: 50%;
            min-width: 150px;
            height: 160px;
            top: 100px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #fff;
            padding: 20px;
            border-radius: 15px;
            z-index: 100;
        }
        .back {
            position: absolute;
            height: 100%;
            width: 100%;
            display: none;
            background: rgba(0,0,0,.5);
            left: 0;
            top: 0;
            z-index: 90;
        }
        .pop p {    
            height: 30px;
            margin: 0;
            font-size: 20px;
            color: #228fbd;
        }
        .pop div.input {
            height: 50px;
            line-height: 50px;
            font-size: 16px;
        }
        .pop div.input input {
            height: 20px;
            width: 100%;
            border: 0;
            border-bottom: 1px solid #ccc;
            text-align: center;
            outline: none;
        }
        .btn-area {
            text-align: center;
        }
        .error-msg {
            display: block;
            text-align: center;
            color: red;
        }
    </style>
}
@section script{
    <script>
        var urlData = location.hash.substr(1)
        var taskId = urlData.split('?')[0]
        var dirName = urlData.split('?')[1].split('=')[1]
        $(function () {
            var utype = @{ <text>@ViewBag.utype</text>};
            if (utype !== 0) {
                $('#createdir').css('display', 'none')
                $('#uploadBtn').css('display', 'block')
            } else {
                $('#createdir').css('display', 'block')
                $('#uploadBtn').css('display', 'none')
            }
            function Files() {

            }
            File.prototype.currentPath = 'root'
            Files.prototype.init = function () {
                var that = this
                $.ajax({
                    url: '/plan/getfiles',
                    type: 'post',
                    dataType: 'json',
                    success: function (res) {
                        if (res.ok) {
                            $('.content').empty();
                            that.render(res.data.uploadfiles, $('.content'))
                        }
                    }
                })
            }
            Files.prototype.render = function (data, el) {
                if (data.length === 0) return
                for (var i = 0; i < data.length; i++) {
                    var d = data[i]
                    var type = d.type
                    var name = d.name
                    if (utype === 0) {
                        if (type === 'file') {
                            el.append("<li class='files file'><a href='javascript:;' title='下载文件'>" + name + "</a><button class='right self-btn btn btn-danger delete'><i class='glyphicon glyphicon-trash'></i></button></li>")
                        }
                        if (type === 'dir') {
                            //<button class='right self-btn btn btn-primary create'><i class='glyphicon glyphicon-plus'></i></button>
                            var children = d.children
                            var a = $("<li class='files dir'><a href='javascript:;' title='打开/关闭文件列表'>" + name + "</a><button class='right self-btn btn btn-danger delete'><i class='glyphicon glyphicon-trash'></i></button><ul class='children'></ul></li>")
                            el.append(a)
                            this.render(children[name], a.find('.children'))
                        }
                    } else {
                        if (type === 'file') {
                            el.append("<li class='files file'><a href='javascript:;' title='下载文件'>" + name + "</a><button class='right self-btn btn btn-danger delete'><i class='glyphicon glyphicon-trash'></i></button></li>")
                        }
                        if (type === 'dir') {
                            var children = d.children
                            var a = $("<li class='files dir'><a href='javascript:;' title='打开/关闭文件列表'>" + name + "</a><button class='right self-btn btn btn-primary upload'><i class='glyphicon glyphicon-file'></i></button><input type='file' multiple style='display: none;'/><ul class='children'></ul></li>")
                            el.append(a)
                            this.render(children[name], a.find('.children'))
                        }
                    }
                }
            }
            Files.prototype.event = function () {
                var that = this
                $('.content').on('click', 'li.dir a', function (e) {
                    if ($(this).parent().hasClass('opend')) {
                        $(this).parent().children('.children').css('display', 'none');
                        $(this).parent().removeClass('opend');
                    } else {
                        $(this).parent().children('.children').css('display', 'block');
                        $(this).parent().addClass('opend');
                    }
                })

                $('#createdir').on('click', function () {
                    that.pop();
                    that.currentPath = "root"
                })

                $('.content').on('click', '.dir .create',function () {
                    that.pop();
                    that.currentPath = ""
                    that.findPath($(this));
                    that.currentPath = that.currentPath.substr(1)
                })

                $('.content').on('click', '.delete', function () {
                    that.currentPath = ""
                    that.findPath($(this));
                    that.currentPath = that.currentPath.substr(1)
                    if (confirm('您确定删除该文件/文件夹吗？')) {
                        that.delete(that.currentPath)
                    }
                })

                $('.content').on('click', '.upload', function () {
                    $(this).next().trigger('click')
                })

                $('.content').on('change', ':file', function () {
                    var btn = $(this).prev();
                    btn.removeClass('btn-primary').addClass('btn-success').attr('title', $(this).val())
                    btn.children('i').removeClass('glyphicon-file').addClass('glyphicon-saved')
                })

                $('.content').on('click', '.file>a', function () {
                    that.currentPath = ""
                    that.findPath($(this))
                    that.currentPath = that.currentPath.substr(1)
                    that.downloadFile(that.currentPath)
                })

                $('#uploadBtn').on('click', function () {
                    var inputs = $('.content :file')
                    var formData = new FormData()
                    for (var i = 0; i < inputs.length; i++) {
                        that.currentPath = ''
                        that.findPath($(inputs[i]))
                        that.currentPath = that.currentPath.substr(1)
                        for (var j = 0; j < inputs[i].files.length; j++) {
                            formData.append(that.currentPath + '\\' + inputs[i].files[j].name, inputs[i].files[j])
                        }
                    }
                    that.upload(formData)
                })

                $('#cancle').on('click', function () {
                    that.closePop();
                })

                $('#sureCreate').on('click', function () {
                    var name = $('#newDirName').val().trim()
                    if (!name) {
                        $('.error-msg').text('请填写文件夹名称')
                        setTimeout(function () { $('.error-msg').text('') }, 5000)
                    }
                    that.createDir(name, that.currentPath);
                })
            }
            Files.prototype.findPath = function (el) {
                this.currentPath = '/' + el.parent().children('a').text() + this.currentPath;
                if (el.parent().parent().hasClass('children')) {
                    this.findPath(el.parent().parent())
                }
            }
            Files.prototype.downloadFile = function (path) {
                $.ajax({
                    url: '/plan/downloadfile',
                    type: 'post',
                    data: { path: path },
                    dataType: 'json',
                    success: function (res) {
                        if (res.ok) {
                            var btn = $('<a style="display:none;" id="realdownload" href="/uploadfiles/' + path + '"><span>下载</span></a>');
                            $(document.body).append(btn)
                            btn.find('span').trigger('click')
                            $(document.body).remove(btn)
                        } else {
                            alert('非法下载!');
                        }
                    }
                })
            }
            Files.prototype.upload = function (formData) {
                var that = this
                $.ajax({
                    url: "/plan/uploadfiles",
                    type: 'post',
                    cache: false,
                    data: formData,
                    processData: false,
                    contentType: false,
                    dataType: "json",
                    success: function (res) {
                        alert(res.message)
                        that.init()
                    }
                })
            }
            Files.prototype.createDir = function (name, path) {
                var that = this
                if (!name.trim() || !path.trim()) {
                    return
                }
                $.ajax({
                    url: '/plan/createdir',
                    data: { name: name, path: path },
                    dataType: 'json',
                    type: 'post',
                    success: function (res) {
                        if (!res.ok) {
                            alert(res.message);
                        }
                        that.closePop()
                        $('#newDirName').val('');
                        that.init()
                    }
                })
            }
            Files.prototype.delete = function (path) {
                var that = this
                if (!path.trim()) {
                    alert('删除该文件/文件夹失败')
                    return
                }
                $.ajax({
                    url: '/plan/deletefile',
                    data: { path: path },
                    dataType: 'json',
                    type: 'post',
                    success: function (res) {
                        if (!res.ok) {
                            alert(res.message)
                        }
                        that.init()
                    }
                })
            }
            Files.prototype.pop = function () {
                $('.pop').css('display', 'block');
                $('.back').css('display', 'block');
            }
            Files.prototype.closePop = function () {
                $('.pop').css('display', 'none');
                $('.back').css('display', 'none');
            }

            var files = new Files()
            files.init()
            files.event()
            $('#dir').text(dirName)
        })
    </script>
}

<div class="container">
    <div style="margin-bottom: 40px"><button id="createdir" class="btn btn-primary glyphicon glyphicon-plus">新建</button><button id="uploadBtn" class="btn btn-primary glyphicon glyphicon-open">上传</button></div>
    <div>任务对应文件夹：<span id="dir"></span></div>
    <div class="content-box">
        <ul class="content"></ul>
    </div>
    <div class="pop">
        <p>新建文件夹</p>
        <div class="input">
            <input id="newDirName" type="text" placeholder="文件夹名称" />
        </div>
        <div class="btn-area">
            <button id="sureCreate" class="btn btn-primary">创建</button>
            <button id="cancle" class="btn btn-danger">取消</button>
        </div>
        <span class="error-msg"></span>
    </div>
    <div class="back"></div>
</div>
